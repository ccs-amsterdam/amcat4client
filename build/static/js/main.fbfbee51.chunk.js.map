{"version":3,"sources":["../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.//.*/.json$","Actions/index.js","components/HeaderMenu.js","apis/amcat.js","components/AmcatLogin.js","components/SelectionTable.js","components/CreateAmcatIndex.js","components/DeleteAmcatIndex.js","components/AmcatIndexSelector.js","components/ArticleTable.js","components/QueryForm.js","components/Query.js","components/CreateDocument.js","components/Create.js","components/Annotate.js","components/AuthRoute.js","App.js","Reducers/index.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","selectAmcatIndex","index","type","payload","setAmcatIndices","indices","LogoutModal","amcat","useSelector","state","dispatch","useDispatch","useState","open","setOpen","Modal","closeIcon","trigger","Menu","Item","icon","name","onClose","onOpen","Header","content","host","Content","Actions","Button","color","onClick","Icon","withRouter","items","location","useLocation","menuItems","item","as","Link","to","path","header","disabled","active","pathname","label","fixed","inverted","position","newAmcatSession","email","password","a","Axios","get","auth","username","response","Amcat","data","token","this","api","create","baseURL","headers","Authorization","field","doc_id","q","fields","scroll","per_page","params","join","console","log","guestRole","body","guest_role","post","documentList","delete","LoginForm","setHost","setEmail","setPassword","status","setStatus","history","useHistory","submitForm","push","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Image","src","Form","size","Segment","stacked","Input","fluid","error","value","onChange","iconPosition","placeholder","Message","SelectionTable","columns","selectedRow","setSelectedRow","defaultSize","ROW_ID","activeRow","setActiveRow","useTable","initialState","pageSize","globalFilter","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageCount","gotoPage","setPageSize","preGlobalFilteredRows","setGlobalFilter","pageIndex","useEffect","GlobalFilter","count","length","target","undefined","border","createHeader","headerGroup","column","TableHeaderCell","className","headerClass","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","Table","striped","singleLine","selectable","TableHeader","TableRow","getHeaderGroupProps","TableBody","row","i","values","onRowSelect","getRowProps","cells","cell","TableCell","getCellProps","createBody","Dropdown","text","options","n","d","marginTop","display","justifyContent","Pagination","firstItem","lastItem","nextItem","prevItem","boundaryRange","ellipsisItem","activePage","totalPages","onPageChange","event","guestRoles","key","CreateAmcatIndex","amcatIndices","amcatIndexName","setAmcatIndexName","setGuestRole","nameError","setNameError","match","invalid","uniqueInvalid","Set","c","primary","onSubmit","preventDefault","trim","some","createIndex","then","res","getIndices","catch","message","Group","width","required","selection","Dimmer","Loader","DeleteAmcatIndex","amcatIndex","deleteIndex","AmcatIndexSelector","selectedAmcatIndex","setSelectedAmcatIndex","Container","widths","accessor","clearable","findIndex","toString","onDropdownSelect","articleTableColumns","ArticleTable","article","articles","selectArticle","QueryForm","query","setQuery","getQuery","results","TextArea","Query","floated","Row","DocumentForms","fieldValues","setFieldValues","newFieldValues","Field","CreateDocument","amcatIndexFields","setAmcatIndexFields","getFields","submitData","test","toISOString","createDocuments","Create","Annotate","articleList","setArticleList","window","helloworld","testTokenize","nlp","title","AuthRoute","Component","componentProps","props","App","Divider","exact","AmcatLogin","rootReducer","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.fbfbee51.chunk.js","sourcesContent":["var map = {\n\t\"./bg-BG.json\": 263,\n\t\"./ca-ES.json\": 264,\n\t\"./cs-CZ.json\": 265,\n\t\"./de-DE.json\": 266,\n\t\"./en-US.json\": 176,\n\t\"./es-ES.json\": 267,\n\t\"./et-EE.json\": 268,\n\t\"./fi-FI.json\": 269,\n\t\"./fr-FR.json\": 270,\n\t\"./he-IL.json\": 271,\n\t\"./it-IT.json\": 272,\n\t\"./ja-JP.json\": 273,\n\t\"./ko-KR.json\": 274,\n\t\"./nb-NO.json\": 275,\n\t\"./nn-NO.json\": 276,\n\t\"./pl-PL.json\": 277,\n\t\"./pt-BR.json\": 278,\n\t\"./ru-RU.json\": 279,\n\t\"./sv-SE.json\": 280,\n\t\"./tr-TR.json\": 281,\n\t\"./zh-CN.json\": 282\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 262;","export const createAmcatSession = (Amcat) => {\n  return {\n    type: \"CREATE_AMCAT_SESSION\",\n    payload: Amcat,\n  };\n};\n\nexport const deleteAmcatSession = () => {\n  return {\n    type: \"DELETE_AMCAT_SESSION\",\n  };\n};\n\nexport const selectAmcatIndex = (index) => {\n  return {\n    type: \"SELECT_AMCAT_INDEX\",\n    payload: index,\n  };\n};\n\nexport const setAmcatIndices = (indices) => {\n  return {\n    type: \"SET_AMCAT_INDICES\",\n    payload: indices,\n  };\n};\n\nexport const selectArticle = (article) => {\n  return {\n    type: \"SELECT_ARTICLE\",\n    payload: article,\n  };\n};\n\nexport const setArticles = (articles) => {\n  return {\n    type: \"SET_ARTICLES\",\n    payload: articles,\n  };\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteAmcatSession } from \"../Actions\";\nimport { Menu, Button, Header, Icon, Modal } from \"semantic-ui-react\";\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\n\nconst HeaderMenu = ({ items }) => {\n  const amcat = useSelector((state) => state.amcat);\n  const location = useLocation();\n\n  const menuItems = items.map((item, index) => {\n    return (\n      <Menu.Item\n        key={\"item-\" + index}\n        index={index}\n        as={Link}\n        to={item.path}\n        header={index === 0}\n        disabled={!amcat}\n        active={item.path === location.pathname}\n      >\n        {item.label}\n      </Menu.Item>\n    );\n  });\n\n  return (\n    <Menu color=\"blue\" fixed=\"top\" inverted>\n      {menuItems}\n      <Menu.Menu position=\"right\">\n        <LogoutModal />\n      </Menu.Menu>\n    </Menu>\n  );\n};\n\nconst LogoutModal = () => {\n  const amcat = useSelector((state) => state.amcat);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n\n  if (!amcat) return null;\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      trigger={<Menu.Item icon=\"power off\" name=\"logout\" />}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon=\"power off\" content={`Logout from ${amcat.host}`} />\n      <Modal.Content>\n        <p>Do you really want to logout?</p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          color=\"red\"\n          onClick={() => {\n            setOpen(false);\n          }}\n        >\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button\n          color=\"green\"\n          onClick={() => {\n            dispatch(deleteAmcatSession());\n            setOpen(false);\n          }}\n        >\n          <Icon name=\"checkmark\" /> Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default withRouter(HeaderMenu);\n","import Axios from \"axios\";\n\nexport default async function newAmcatSession(host, email, password) {\n  const response = await Axios.get(`${host}/auth/token/`, {\n    auth: { username: email, password: password },\n  });\n  return new Amcat(host, email, response.data.token);\n}\n\nclass Amcat {\n  constructor(host, email, token) {\n    this.host = host;\n    this.email = email;\n    this.api = Axios.create({\n      baseURL: host,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  // GET\n  getIndices() {\n    return this.api.get(`/index/`);\n  }\n  getIndex(index) {\n    return this.api.get(`/index/${index}`);\n  }\n  getFields(index) {\n    return this.api.get(`/index/${index}/fields`);\n  }\n  getFieldValues(index, field) {\n    return this.api.get(`/index/${index}/fields/${field}/values`);\n  }\n  getDocument(index, doc_id) {\n    return this.api.get(`/index/${index}/documents/${doc_id}`);\n  }\n  getQuery(index, q, fields, scroll = \"2m\", per_page = 100, params = {}) {\n    params[\"scroll\"] = scroll; // for scrolling, update with id obtained from results.meta.scroll_id\n    params[\"per_page\"] = per_page;\n    if (fields) params[\"fields\"] = fields.join(\",\");\n    if (q) params[\"q\"] = q;\n    console.log(\"tets\");\n    console.log(params);\n    return this.api.get(`/index/${index}/query`, { params });\n  }\n\n  // POST\n  createIndex(name, guestRole = \"NONE\") {\n    const body = { name: name };\n    if (guestRole !== \"NONE\") body.guest_role = guestRole;\n    console.log(body);\n    return this.api.post(`/index/`, body);\n  }\n  createDocuments(name, documentList) {\n    // documentList should be an array of objects with at least the fields title, date and text\n    return this.api.post(`/index/${name}/documents`, documentList);\n  }\n\n  // DELETE\n  deleteIndex(index) {\n    return this.api.delete(`/index/${index}`);\n  }\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createAmcatSession } from \"../Actions\";\n\nimport newAmcatSession from \"../apis/amcat\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nconst color = \"blue\";\n\nconst LoginForm = ({ items }) => {\n  const dispatch = useDispatch();\n\n  const [host, setHost] = useState(\"http://127.0.0.1:5000\");\n  const [email, setEmail] = useState(\"admin\");\n  const [password, setPassword] = useState(\"admin\");\n  const [status, setStatus] = useState(\"idle\");\n  const history = useHistory();\n\n  const submitForm = async () => {\n    setStatus(\"waiting\");\n    try {\n      const amcat = await newAmcatSession(host, email, password);\n      dispatch(createAmcatSession(amcat));\n      setStatus(\"success\");\n      history.push(items[0].path);\n    } catch (e) {\n      setStatus(\"error\");\n    }\n  };\n\n  return (\n    <Grid\n      inverted\n      textAlign=\"center\"\n      style={{ height: \"100vh\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color={color} textAlign=\"center\">\n          <Image src=\"/amcat-logo.svg\" /> Connect to an AmCAT server\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              error={status === \"error\"}\n              value={host}\n              onChange={(e, { value }) => {\n                setStatus(\"idle\");\n                setHost(value);\n              }}\n              icon=\"home\"\n              iconPosition=\"left\"\n              placeholder=\"Host\"\n            />\n            <Form.Input\n              fluid\n              error={status === \"error\"}\n              value={email}\n              onChange={(e, { value }) => {\n                setStatus(\"idle\");\n                setEmail(value);\n              }}\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Email adress\"\n            />\n            <Form.Input\n              fluid\n              error={status === \"error\"}\n              value={password}\n              onChange={(e, { value }) => {\n                setStatus(\"idle\");\n                setPassword(value);\n              }}\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n            />\n\n            <Button onClick={submitForm} color={color} fluid size=\"large\">\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>Don't have an account? Too bad</Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport {\n  Segment,\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHeaderCell,\n  TableCell,\n  Pagination,\n  Dropdown,\n  Icon,\n} from \"semantic-ui-react\";\n\n// Uses react-table with semantic ui. The columns and data arguments are lists of objects\n// The 'columns' argument specifies column names (Header) and the names of the keys to get from data.\n//\n// const columns = [\n//   { Header: \"ID\", accessor: \"id\", headerClass: \"one wide\" },\n//   { Header: \"Name\", accessor: \"text\", headerClass: \"one wide\" },\n// ]\n//\n// Note that headerClass is custom, and enables setting the header cell class,\n// which is used in semantic ui to specify the width (one wide, ten wide, etc).\n\nconst SelectionTable = ({\n  columns,\n  data,\n  selectedRow,\n  setSelectedRow,\n  defaultSize = 15,\n}) => {\n  const [activeRow, setActiveRow] = useState(\n    selectedRow ? selectedRow.ROW_ID : null\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageCount,\n    gotoPage,\n    setPageSize,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: { pageIndex, globalFilter },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageSize: defaultSize, globalFilter: \"\" },\n    },\n\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  useEffect(() => {\n    if (selectedRow) {\n      setActiveRow(selectedRow.ROW_ID);\n    } else {\n      setActiveRow(null);\n    }\n  }, [selectedRow]);\n\n  const GlobalFilter = ({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) => {\n    const count = preGlobalFilteredRows && preGlobalFilteredRows.length;\n\n    return (\n      <span>\n        <input\n          value={globalFilter || \"\"}\n          onChange={(e) => {\n            setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n          }}\n          placeholder={`Search ${count} records...`}\n          style={{\n            border: \"0\",\n          }}\n        />\n      </span>\n    );\n  };\n\n  const onRowSelect = (row) => {\n    if (activeRow && activeRow === row.id) {\n      setSelectedRow(null);\n      setActiveRow(null);\n    } else {\n      setSelectedRow({ ...row.values, ROW_ID: row.id });\n      setActiveRow(row.id);\n    }\n  };\n\n  const createHeader = (headerGroup) => {\n    return headerGroup.headers.map((column) => {\n      return (\n        <TableHeaderCell\n          className={column.headerClass}\n          {...column.getHeaderProps(column.getSortByToggleProps())}\n        >\n          {column.render(\"Header\")}\n          <span>\n            {column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}\n          </span>\n        </TableHeaderCell>\n      );\n    });\n  };\n\n  const createBody = (page) => {\n    return page.map((row, i) => {\n      prepareRow(row);\n      return (\n        <TableRow\n          active={activeRow ? activeRow === row.id : false}\n          onClick={() => onRowSelect(row)}\n          {...row.getRowProps()}\n        >\n          {row.cells.map((cell) => {\n            return (\n              <TableCell {...cell.getCellProps()}>\n                {cell.render(\"Cell\")}\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      );\n    });\n  };\n\n  if (data.length === 0) return null;\n\n  return (\n    <Segment style={{ border: \"0\" }}>\n      <GlobalFilter\n        preGlobalFilteredRows={preGlobalFilteredRows}\n        globalFilter={globalFilter}\n        setGlobalFilter={setGlobalFilter}\n      />\n\n      <Table striped fixed singleLine selectable {...getTableProps()}>\n        <TableHeader>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {createHeader(headerGroup)}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody {...getTableBodyProps()}>{createBody(page)}</TableBody>\n      </Table>\n      <Dropdown\n        text=\"show per page\"\n        options={[10, 25, 50, 100, 500].map((n) => ({ value: n, text: n }))}\n        onChange={(e, d) => {\n          setPageSize(d.value);\n        }}\n      />\n      <div\n        style={{\n          marginTop: \"3em\",\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Pagination\n          style={{ border: \"0\" }}\n          size=\"mini\"\n          firstItem={false}\n          lastItem={false}\n          nextItem={false}\n          prevItem={false}\n          boundaryRange={1}\n          ellipsisItem={{\n            content: <Icon name=\"ellipsis horizontal\" />,\n            icon: true,\n          }}\n          activePage={pageIndex + 1}\n          totalPages={pageCount}\n          onPageChange={(event, data) => {\n            gotoPage(data.activePage - 1);\n          }}\n        />\n      </div>\n    </Segment>\n  );\n};\n\nexport default SelectionTable;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAmcatIndex, setAmcatIndices } from \"../Actions\";\nimport {\n  Header,\n  Button,\n  Modal,\n  Form,\n  Dropdown,\n  Loader,\n  Dimmer,\n  Icon,\n} from \"semantic-ui-react\";\n\nconst guestRoles = [\n  { key: 0, value: \"NONE\", text: \"No access\" },\n  { key: 10, value: \"METAREADER\", text: \"Meta-reader\" },\n  { key: 20, value: \"READER\", text: \"Reader\" },\n  { key: 30, value: \"WRITER\", text: \"Writer\" },\n  { key: 40, value: \"ADMIN\", text: \"Admin\" },\n];\n\nconst CreateAmcatIndex = () => {\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndices = useSelector((state) => state.amcatIndices);\n  const dispatch = useDispatch();\n\n  const [status, setStatus] = useState(\"inactive\");\n  const [amcatIndexName, setAmcatIndexName] = useState(\"\");\n  const [guestRole, setGuestRole] = useState(\"NONE\");\n  const [nameError, setNameError] = useState(null);\n\n  useEffect(() => {\n    if (amcatIndexName.match(/[ \"*|<>/?,A-Z]/)) {\n      const invalid = amcatIndexName.match(/[ \"*|<>/?]/gi);\n      let uniqueInvalid = [...new Set(invalid)].map((c) =>\n        c === \" \" ? \"space\" : c\n      );\n      if (amcatIndexName.match(/[A-Z]/)) uniqueInvalid.push(\"UPPERCASE\");\n      setNameError(`Illegal symbols: ${uniqueInvalid.join(\" \")}`);\n    } else {\n      setNameError(null);\n    }\n  }, [amcatIndexName]);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    setAmcatIndexName(amcatIndexName.trim());\n    console.log(amcatIndexName);\n    if (amcatIndices.some((o) => o.name === amcatIndexName)) {\n      setNameError(\"This Index name already exists\");\n      return;\n    }\n\n    setStatus(\"pending\");\n    amcat\n      .createIndex(amcatIndexName, guestRole)\n      .then((res) => {\n        // maybe check for 201 before celebrating\n        console.log(res.status);\n\n        if (amcat) {\n          amcat.getIndices().then((res) => {\n            dispatch(selectAmcatIndex(null));\n            dispatch(setAmcatIndices(res.data));\n          });\n        }\n\n        setStatus(\"inactive\");\n      })\n      .catch((e) => {\n        console.log(e.message);\n        console.log(e);\n        setStatus(\"error\");\n      });\n  };\n\n  if (!amcatIndices) return null;\n\n  return (\n    <Modal\n      as={Form}\n      trigger={\n        <Button primary>\n          <Icon name=\"plus\" />\n          Create new index\n        </Button>\n      }\n      onSubmit={(e) => onSubmit(e)}\n      open={status !== \"inactive\"}\n      onClose={() => setStatus(\"inactive\")}\n      onOpen={() => {\n        setAmcatIndexName(\"\");\n        setGuestRole(\"NONE\");\n        setStatus(\"awaiting input\");\n      }}\n      size=\"tiny\"\n    >\n      <Header icon=\"pencil\" content=\"Create new index\" as=\"h2\" />\n      <Modal.Content>\n        <Form.Group>\n          <Form.Input\n            width={12}\n            label=\"Name\"\n            required\n            type=\"text\"\n            error={nameError ? nameError : null}\n            value={amcatIndexName}\n            onChange={(e, d) => {\n              setStatus(\"awaiting input\");\n              setAmcatIndexName(d.value);\n            }}\n            placeholder=\"Enter name\"\n          />\n          <div>\n            <b>Guest role</b>\n            <br />\n            <Form.Input\n              width={4}\n              label=\"Name\"\n              as={Dropdown}\n              selection\n              value={guestRole}\n              onChange={(e, d) => {\n                setGuestRole(d.value);\n              }}\n              options={guestRoles}\n            />\n          </div>\n        </Form.Group>\n      </Modal.Content>\n      <Modal.Actions>\n        {status === \"error\" ? (\n          <div>\n            Could not create index for a reason not yet covered in the error\n            handling...\n          </div>\n        ) : null}\n        {status === \"pending\" ? (\n          <Dimmer active inverted>\n            <Loader content=\"Creating Index\" />\n          </Dimmer>\n        ) : (\n          <Button type=\"submit\" color=\"green\" icon=\"save\" content=\"Create\" />\n        )}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default CreateAmcatIndex;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAmcatIndex, setAmcatIndices } from \"../Actions\";\nimport { Button, Header, Icon, Modal, Dimmer, Loader } from \"semantic-ui-react\";\n\nconst DeleteAmcatIndex = () => {\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n  const dispatch = useDispatch();\n\n  const [status, setStatus] = useState(\"inactive\");\n\n  const onSubmit = (event) => {\n    setStatus(\"pending\");\n    console.log(amcatIndex);\n    amcat\n      .deleteIndex(amcatIndex.name)\n      .then((res) => {\n        // maybe check for 201 before celebrating\n        console.log(res.status);\n\n        if (amcat) {\n          amcat.getIndices().then((res) => {\n            dispatch(selectAmcatIndex(null));\n            dispatch(setAmcatIndices(res.data));\n          });\n        }\n        setStatus(\"inactive\");\n      })\n      .catch((e) => {\n        console.log(e.message);\n        console.log(e);\n        setStatus(\"error\");\n      });\n  };\n\n  if (!amcatIndex) return null;\n\n  return (\n    <Modal\n      closeIcon\n      open={status !== \"inactive\"}\n      trigger={\n        <Button name=\"logout\">\n          <Icon name=\"minus\" /> Delete Index\n        </Button>\n      }\n      onClose={() => {\n        setStatus(\"inactive\");\n      }}\n      onOpen={() => {\n        setStatus(\"awaiting input\");\n      }}\n    >\n      <Header icon=\"trash\" content={`Delete Index ${amcatIndex.name}`} />\n      <Modal.Content>\n        <p>Do you really want to delete this Index?</p>\n      </Modal.Content>\n      <Modal.Actions>\n        {status === \"error\" ? (\n          <div>\n            Could not delete index for a reason not yet covered in the error\n            handling...\n          </div>\n        ) : null}\n        {status === \"pending\" ? (\n          <Dimmer active inverted>\n            <Loader content=\"Creating Index\" />\n          </Dimmer>\n        ) : (\n          <>\n            <Button color=\"red\" onClick={onSubmit}>\n              <Icon name=\"remove\" /> No\n            </Button>\n            <Button color=\"green\" onClick={onSubmit}>\n              <Icon name=\"checkmark\" /> Yes\n            </Button>\n          </>\n        )}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default DeleteAmcatIndex;\n","import React, { useState, useEffect, useDebugValue } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Container, Dropdown } from \"semantic-ui-react\";\nimport { selectAmcatIndex, setAmcatIndices } from \"../Actions\";\n\nimport SelectionTable from \"./SelectionTable\";\nimport CreateAmcatIndex from \"./CreateAmcatIndex\";\nimport DeleteAmcatIndex from \"./DeleteAmcatIndex\";\n\nconst AmcatIndexSelector = ({ type = \"table\" }) => {\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndices = useSelector((state) => state.amcatIndices);\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n  const dispatch = useDispatch();\n\n  const [selectedAmcatIndex, setSelectedAmcatIndex] = useState(amcatIndex);\n\n  useEffect(() => {\n    dispatch(selectAmcatIndex(selectedAmcatIndex));\n  }, [selectedAmcatIndex, dispatch]);\n\n  useEffect(() => {\n    if (amcat && amcatIndices.length === 0)\n      amcat.getIndices().then((res) => {\n        dispatch(setAmcatIndices(res.data));\n      });\n  }, []);\n\n  if (type === \"table\") {\n    const tableColumns = [\n      {\n        Header: \"Select Index\",\n        accessor: \"name\",\n        headerClass: \"thirteen wide\",\n      },\n    ];\n\n    return (\n      <Container>\n        <Button.Group widths=\"2\">\n          <CreateAmcatIndex />\n          <DeleteAmcatIndex />\n        </Button.Group>\n        <SelectionTable\n          columns={tableColumns}\n          data={amcatIndices}\n          selectedRow={selectedAmcatIndex}\n          setSelectedRow={setSelectedAmcatIndex}\n          defaultSize={15}\n        />\n      </Container>\n    );\n  }\n\n  if (type === \"dropdown\") {\n    const asDropdownItems = (indices) => {\n      return indices.map((index) => {\n        return { key: index.name, text: index.name, value: index.name };\n      });\n    };\n\n    const onDropdownSelect = (value) => {\n      if (value) {\n        const i = amcatIndices.findIndex((row) => row.name === value);\n        console.log(i);\n        setSelectedAmcatIndex({ ...amcatIndices[i], ROW_ID: i.toString() });\n      } else {\n        setSelectedAmcatIndex(null);\n      }\n    };\n\n    return (\n      <Dropdown\n        clearable\n        selection\n        options={asDropdownItems(amcatIndices)}\n        value={amcatIndex ? amcatIndex.name : null}\n        onChange={(e, d) => onDropdownSelect(d.value)}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport default AmcatIndexSelector;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SelectionTable from \"./SelectionTable\";\nimport { selectArticle } from \"../Actions\";\n\nconst articleTableColumns = [\n  { Header: \"ID\", accessor: \"id\", headerClass: \"two wide\" },\n  { Header: \"Date\", accessor: \"date\", headerClass: \"six wide\" },\n  { Header: \"Title\", accessor: \"title\", headerClass: \"eight wide\" },\n];\n\nconst ArticleTable = () => {\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n  const article = useSelector((state) => state.article);\n  const articles = useSelector((state) => state.articles);\n  const dispatch = useDispatch();\n\n  const [selectedRow, setSelectedRow] = useState(article);\n\n  useEffect(() => {\n    dispatch(selectArticle(selectedRow));\n  }, [selectedRow, dispatch]);\n\n  if (!amcatIndex) return null;\n\n  return (\n    <SelectionTable\n      columns={articleTableColumns}\n      data={articles}\n      selectedRow={selectedRow}\n      setSelectedRow={setSelectedRow}\n      defaultSize={15}\n    />\n  );\n};\n\nexport default ArticleTable;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Container, Button, Icon, Segment } from \"semantic-ui-react\";\nimport { setArticles } from \"../Actions\";\n\n//const data = [{ id: 777, date: \"2010-01-01\", title: \"James Bond on Ice\" }];\n\nconst QueryForm = () => {\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n  const dispatch = useDispatch();\n\n  const [query, setQuery] = useState(\"\");\n\n  const onSubmit = () => {\n    const fields = [\"date\", \"title\", \"url\"];\n\n    amcat\n      .getQuery(amcatIndex.name, query, fields, \"2m\", 100, {})\n      .then((res) => {\n        console.log(res.data.results);\n        dispatch(setArticles(res.data.results));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  if (!amcatIndex) return null;\n\n  return (\n    <Container>\n      <Button.Group widths=\"2\">\n        <Button primary type=\"submit\" onClick={onSubmit}>\n          <Icon name=\"search\" />\n          Search\n        </Button>\n      </Button.Group>\n      <Segment style={{ border: \"0\" }}>\n        <Form>\n          <Form.Group>\n            <Form.TextArea width={16} onChange={(e, d) => setQuery(d.value)} />\n          </Form.Group>\n        </Form>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default QueryForm;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nimport AmcatIndexSelector from \"./AmcatIndexSelector\";\nimport ArticleTable from \"./ArticleTable\";\nimport QueryForm from \"./QueryForm\";\n\nconst Query = () => {\n  return (\n    <Grid style={{ marginTop: \"3em\" }}>\n      <Grid.Column floated=\"left\" width={5}>\n        <AmcatIndexSelector type=\"table\" />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Grid.Row>\n          <QueryForm />\n        </Grid.Row>\n        <Grid.Row>\n          <ArticleTable />\n        </Grid.Row>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Query;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\n\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\n\nconst CreateDocument = () => {\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n\n  const [amcatIndexFields, setAmcatIndexFields] = useState(null);\n  const [fieldValues, setFieldValues] = useState({});\n\n  useEffect(() => {}, [fieldValues]);\n\n  useEffect(() => {\n    if (amcatIndex && amcat) {\n      amcat.getFields(amcatIndex.name).then((res) => {\n        setAmcatIndexFields(res.data);\n      });\n    } else {\n      setAmcatIndexFields(null);\n    }\n  }, [amcat, amcatIndex]);\n\n  const onCreate = () => {\n    let submitData = { ...fieldValues };\n\n    for (const key of Object.keys(submitData)) {\n      if (key === \"date\" || /_date$/.test(key)) {\n        submitData[key] = submitData[key].toISOString();\n      }\n    }\n\n    amcat\n      .createDocuments(amcatIndex.name, [fieldValues])\n      .then((res) => {\n        // maybe check for 201 before celebrating\n        console.log(res.status);\n        setFieldValues({});\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <Form>\n      <DocumentForms\n        fields={amcatIndexFields}\n        fieldValues={fieldValues}\n        setFieldValues={setFieldValues}\n      />\n      {!amcatIndex ? null : (\n        <Button primary onClick={onCreate}>\n          Create document\n        </Button>\n      )}\n    </Form>\n  );\n};\n\nconst DocumentForms = function ({ fields, fieldValues, setFieldValues }) {\n  const onSubmit = (key, value) => {\n    const newFieldValues = { ...fieldValues };\n    newFieldValues[key] = value;\n    setFieldValues(newFieldValues);\n  };\n\n  if (!fields) return null;\n\n  return Object.keys(fields).map((key) => {\n    if (fields[key] === \"text\") {\n      return (\n        <Form.TextArea\n          key={key}\n          value={fieldValues[key] ? fieldValues[key] : \"\"}\n          onChange={(e, d) => onSubmit(key, d.value)}\n          label={key}\n        />\n      );\n    }\n    if (fields[key] === \"date\") {\n      return (\n        <SemanticDatepicker\n          key={key}\n          label={key}\n          value={fieldValues[key] ? fieldValues[key] : \"\"}\n          onChange={(e, d) => onSubmit(key, d.value)}\n        />\n      );\n    }\n    if (fields[key] === \"keyword\") {\n      return (\n        <Form.Field key={key}>\n          <label>{key}</label>\n          <input\n            value={fieldValues[key] ? fieldValues[key] : \"\"}\n            onChange={(e) => onSubmit(key, e.target.value)}\n          />\n        </Form.Field>\n      );\n    }\n    return null;\n  });\n};\n\nexport default CreateDocument;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nimport AmcatIndexSelector from \"./AmcatIndexSelector\";\nimport CreateDocument from \"./CreateDocument\";\n\nconst Create = () => {\n  return (\n    <Grid style={{ marginTop: \"3em\" }}>\n      <Grid.Column floated=\"left\" width={5}>\n        <AmcatIndexSelector type=\"table\" />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <CreateDocument />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Create;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Dropdown, Grid } from \"semantic-ui-react\";\nimport AmcatIndexSelector from \"./AmcatIndexSelector\";\nimport ArticleTable from \"./ArticleTable\";\n\nconst Annotate = () => {\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n  const [articleList, setArticleList] = useState([]);\n\n  useEffect(() => {\n    window.helloworld();\n    if (amcat && amcatIndex) {\n      const fields = [\"date\", \"title\", \"url\", \"text\"];\n      amcat\n        .getQuery(amcatIndex.name, \"\", fields, \"2m\", 100, {})\n        .then((res) => {\n          setArticleList(res.data.results);\n          testTokenize(res.data.results[0].text);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  }, [amcat, amcatIndex]);\n\n  const testTokenize = (text) => {\n    console.log(text);\n    console.log(\"tokens\");\n    console.log(window.nlp(text));\n  };\n\n  const getArticleOptions = (articles) => {\n    const items = articles.map((article, i) => {\n      return { key: i, text: article.title, value: i };\n    });\n    return items;\n  };\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <AmcatIndexSelector type=\"dropdown\" />\n        <Dropdown selection options={getArticleOptions(articleList)} />\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column>test</Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default Annotate;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router\";\n\nconst AuthRoute = ({ Component, ...componentProps }) => {\n  // the trick for passing on componentProps is basically\n  // redundant now that we use Redux, but leaving it intact just in case\n  const amcat = useSelector((state) => state.amcat);\n  if (!amcat) return <Redirect to=\"/\" />;\n  return (\n    <Route\n      {...componentProps}\n      render={(props) => <Component {...componentProps} {...props} />}\n    />\n  );\n};\n\nexport default AuthRoute;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HeaderMenu from \"./components/HeaderMenu\";\nimport { Divider, Container } from \"semantic-ui-react\";\n\nimport AmcatLogin from \"./components/AmcatLogin\";\nimport Query from \"./components/Query\";\nimport Create from \"./components/Create\";\nimport Annotate from \"./components/Annotate\";\nimport AuthRoute from \"./components/AuthRoute\";\n\n// Change to add new components to the header\n// The first item will be the opening page after login\nconst items = [\n  { label: \"Query\", path: \"/query\", Component: Query },\n  { label: \"Create\", path: \"/create\", Component: Create },\n  { label: \"Annotate\", path: \"/annotate\", Component: Annotate },\n];\n\nconst App = () => {\n  const createNavigation = (items) => {\n    return items.map((item) => {\n      return <AuthRoute path={item.path} Component={item.Component} />;\n    });\n  };\n\n  return (\n    <BrowserRouter>\n      <HeaderMenu items={items} />\n      <Divider />\n      <Container style={{ marginTop: \"3em\" }}>\n        <Switch>\n          <Route exact path=\"/\" render={() => <AmcatLogin items={items} />} />\n          {createNavigation(items)}\n        </Switch>\n      </Container>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nconst amcat = (state = null, action) => {\n  switch (action.type) {\n    case \"CREATE_AMCAT_SESSION\":\n      return action.payload;\n    case \"DELETE_AMCAT_SESSION\":\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst amcatIndex = (state = null, action) => {\n  switch (action.type) {\n    case \"SELECT_AMCAT_INDEX\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst amcatIndices = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_AMCAT_INDICES\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst articles = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_ARTICLES\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst article = (state = [], action) => {\n  switch (action.type) {\n    case \"SELECT_ARTICLE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  amcat,\n  amcatIndex,\n  amcatIndices,\n  article,\n  articles,\n});\n\nexport default rootReducer;\n","import \"semantic-ui-css/semantic.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}