{"version":3,"sources":["actions/index.js","components/HeaderMenu.js","history.js","apis/amcat.js","components/AmcatLogin.js","components/AuthRoute.js","components/modal.js","components/QueryHelp.js","components/Home.js","components/Admin.js","components/DocumentForms.js","components/CreateDocument.js","components/AmcatIndexDetails.js","components/DeleteAmcatIndex.js","components/SelectionTable.js","components/CreateAmcatIndex.js","components/AmcatIndexSelector.js","components/PreviewTable.js","components/submitForm.js","components/UploadDocuments.js","components/Indices.js","components/TimeSeriesPlot.js","components/DocumentTable.js","components/FilterForms.js","components/QuickFilters.js","components/QueryForm.js","components/Query.js","App.js","components/DocumentDetail.js","reducers/index.js","index.js","../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.//.*/.json$"],"names":["selectAmcatIndex","index","type","payload","setAmcatIndices","indices","selectDocument","document","setDocuments","documents","setIndexFields","fields","setFieldValues","fieldValues","setQueryString","query","setLatestQueries","HeaderMenu","props","state","open","this","items","map","item","Menu","Item","position","as","Link","to","path","header","disabled","amcat","active","window","location","pathname","label","closeIcon","trigger","icon","name","onClose","setState","onOpen","Header","content","host","Content","Actions","Button","color","onClick","Icon","deleteAmcatSession","fixed","inverted","_","filter","renderMenuItems","v","renderLogoutModal","React","Component","connect","createBrowserHistory","newAmcatSession","email","password","a","Axios","get","auth","username","response","Amcat","data","token","api","create","baseURL","headers","Authorization","field","doc_id","q","scroll","per_page","params","filters","console","log","join","post","guestRole","body","guest_role","documentList","delete","pass","role","giveAccess","oldEmail","put","defaultLoginCredentials","AmcatLogin","submitForm","loginStatus","then","createAmcatSession","history","push","catch","e","Form","size","Segment","stacked","Input","fluid","error","status","value","onChange","iconPosition","placeholder","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Image","src","renderLoginForm","Message","ownProps","AuthRoute","componentProps","render","Modal","ReactDOM","createPortal","className","onDismiss","stopPropagation","title","actions","querySelector","QueryHelp","useState","setOpen","cursor","float","href","Home","prop","amcatIndex","queryString","setting","positive","floated","btnText","funcs","primary","plugIn","Fragment","width","marginBottom","target","Group","widths","runQuery","postQuery","res","results","addToQueryStrings","queryStrings","latestQueries","includes","unshift","alt","marginTop","Container","user","Row","border","divided","renderCurrentSetting","renderCoreFunctionalities","renderAmcatPlugins","renderActions","renderAmcatLogo","renderQueryWindow","renderModal","renderHome","options","key","text","Admin","newUsername","newUserpass","newUserrole","updatedIndex","updatedRole","selectedUser","getUsers","setAllUsers","allUsers","Table","Cell","index_name","oldUser","openEditModal","Or","negative","deleteUser","updatedAllUsers","obj","compact","celled","HeaderCell","Body","renderTableCells","Footer","fullWidth","colSpan","labelPosition","marginRight","Dropdown","button","basic","floating","createUser","selUser","modifyUser","forEach","renderAdminFuncs","renderAddUserModal","renderUserEditModal","users","DocumentForms","newFieldValues","Object","keys","d","onSubmit","TextArea","indexFields","CreateDocument","onCreate","submitData","test","toISOString","createDocuments","getFields","AmcatIndexDetails","DeleteAmcatIndex","event","modalStatus","deleteIndex","getIndices","message","Dimmer","Loader","GlobalFilter","globalFilter","setGlobalFilter","numDocs","undefined","SelectionTable","columns","selectedRow","setSelectedRow","defaultSize","sizeSelector","downloadArticleSet","ROW_ID","activeRow","setActiveRow","dispatch","useDispatch","useSelector","csvDoc","setcsvDoc","csvDocs","setcsvDocs","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageCount","gotoPage","setPageSize","preGlobalFilteredRows","pageIndex","useEffect","ORG_ID","getDocument","convertToCSV","arr","multiple","concat","it","idx","values","toString","entries","replace","createHeader","headerGroup","column","TableHeaderCell","headerClass","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","length","unstackable","striped","singleLine","selectable","TableHeader","TableRow","getHeaderGroupProps","TableBody","row","i","id","original","_id","onRowSelect","getRowProps","cells","cell","TableCell","getCellProps","setTimeout","prepareDocumentCVS","filename","createBody","n","display","justifyContent","doc","prepareDocumentsCVS","Pagination","firstItem","lastItem","nextItem","prevItem","boundaryRange","ellipsisItem","activePage","totalPages","onPageChange","guestRoles","CreateAmcatIndex","preventDefault","newIndexName","trim","amcatIndices","some","o","nameError","createIndex","match","invalid","uniqueInvalid","Set","c","required","validateName","selection","tableColumns","accessor","AmcatIndexSelector","renderDropDownItems","onDropdownSelect","findIndex","selectedAmcatIndex","search","renderTable","renderDropDown","PreviewTable","colname","createRows","slice","createRowCells","align","uploadDocuments","SubmitForm","fileRef","setOptions","dateField","setDateField","titleField","setTitleField","textField","setTextField","annotationsField","setAnnotationsField","csvToJson","datarow","reduce","meta","annotations","JSON","stringify","uploadData","preparedData","current","removeFile","Field","control","Select","clearable","UploadDocuments","createRef","stackable","ref","onFileLoad","addRemoveButton","onRemoveFile","newDocuments","Indices","activeItem","pointing","secondary","renderSwitch","PlotlyComponent","createPlotlyComponent","Plotly","Plot","dates","setDates","docsOverTime","setDocsOverTime","unpack","rows","date","x","y","mode","line","layout","font","family","xaxis","yaxis","config","displaylogo","documentTableColumns","DocumentTable","FilterForms","omit","dateFilter","isEmpty","extractDateFormat","month","getMonth","day","getDate","getUTCFullYear","charAt","toUpperCase","locale","navigator","format","QuickFilters","renderDatePicker","option","labeled","scrolling","number","titles","times","getTitleOptions","textContent","QueryForm","method","prepareFilters","getQuery","queryMethod","accordionActive","range","rangeIndicator","testQuery","remove","renderFilters","renderLatestQueriesList","vertical","TimeSeriesPlot","renderIndexSelector","renderDocumentTable","renderTimeSeriesPlot","Query","amcatIndexFields","loading","Label","ribbon","App","Divider","exact","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","StrictMode","webpackContext","req","webpackContextResolve","__webpack_require__","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.a3297d34.chunk.js","sourcesContent":["export const createAmcatSession = (Amcat) => {\n  return {\n    type: 'CREATE_AMCAT_SESSION',\n    payload: Amcat,\n  };\n};\n\nexport const deleteAmcatSession = () => {\n  return {\n    type: 'DELETE_AMCAT_SESSION',\n  };\n};\n\nexport const selectAmcatIndex = (index) => {\n  return {\n    type: 'SELECT_AMCAT_INDEX',\n    payload: index,\n  };\n};\n\nexport const setAmcatIndices = (indices) => {\n  return {\n    type: 'SET_AMCAT_INDICES',\n    payload: indices,\n  };\n};\n\nexport const selectDocument = (document) => {\n  return {\n    type: 'SELECT_ROW',\n    payload: document,\n  };\n};\n\nexport const setDocuments = (documents) => {\n  return {\n    type: 'SET_DOCUMENTS',\n    payload: documents,\n  };\n};\n\nexport const uploadDocuments = (documents) => {\n  return {\n    type: 'UPLOAD_DOCUMENTS',\n    payload: documents,\n  };\n};\n\nexport const setTokenIndices = (tokenIndices) => {\n  return {\n    type: 'SET_TOKEN_INDICES',\n    payload: tokenIndices,\n  };\n};\n\nexport const toggleAnnotations = (spanAnnotation) => {\n  return {\n    type: 'TOGGLE_ANNOTATIONS',\n    payload: spanAnnotation,\n  };\n};\n\nexport const rmAnnotations = (spanAnnotation) => {\n  return {\n    type: 'RM_ANNOTATIONS',\n    payload: spanAnnotation,\n  };\n};\n\nexport const clearSpanAnnotations = () => {\n  return {\n    type: 'CLEAR_SPAN_ANNOTATIONS',\n  };\n};\n\nexport const setCodes = (codes) => {\n  return {\n    type: 'SET_CODES',\n    payload: codes,\n  };\n};\n\nexport const appendCodeHistory = (code, n = 5) => {\n  return {\n    type: 'APPEND_CODE_HISTORY',\n    payload: { code: code, n: n },\n  };\n};\n\nexport const setIndexFields = (fields) => {\n  return {\n    type: 'SET_INDEX_FIELDS',\n    payload: fields,\n  };\n};\n\nexport const setFieldValues = (fieldValues) => {\n  return {\n    type: 'SET_FIELD_VALUES',\n    payload: fieldValues,\n  };\n};\n\nexport const setQueryString = (query) => {\n  return {\n    type: 'SET_QUERY_STRING',\n    payload: query,\n  };\n};\n\nexport const setLatestQueries = (query) => {\n  return {\n    type: 'SET_LATEST_QUERIES',\n    payload: query,\n  };\n};\n\nexport const setAllUsers = (users) => {\n  return {\n    type: 'SET_ALL_USERS',\n    payload: users,\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteAmcatSession } from '../actions';\nimport { Menu, Button, Header, Icon, Modal } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nclass HeaderMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  renderMenuItems() {\n    return this.props.items.map((item, index) => {\n      return (\n        <Menu.Item\n          key={'item-' + index}\n          index={index}\n          position={item.position}\n          as={Link}\n          to={item.path}\n          header={index === 0}\n          disabled={!this.props.amcat}\n          active={item.path === window.location.pathname}\n        >\n          {item.label}\n        </Menu.Item>\n      );\n    });\n  }\n\n  renderLogoutModal() {\n    if (!this.props.amcat) return null;\n    return (\n      <Modal\n        closeIcon\n        open={this.state.open}\n        trigger={<Menu.Item icon=\"power off\" name=\"logout\" />}\n        onClose={() => this.setState({ open: false })}\n        onOpen={() => this.setState({ open: true })}\n      >\n        <Header\n          icon=\"power off\"\n          content={`Logout from ${this.props.amcat.host}`}\n        />\n        <Modal.Content>\n          <p>Do you really want to logout?</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"red\"\n            onClick={() => {\n              this.setState({ open: false });\n            }}\n          >\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Button\n            color=\"green\"\n            onClick={() => {\n              this.props.deleteAmcatSession();\n              this.setState({ open: false });\n            }}\n          >\n            <Icon name=\"checkmark\" /> Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <Menu color=\"blue\" fixed=\"top\" inverted>\n        <Menu.Menu position=\"left\">\n          {_.filter(\n            this.renderMenuItems(),\n            (v) => v.props.position !== 'right'\n          )}\n        </Menu.Menu>\n        <Menu.Menu position=\"right\">\n          {_.filter(\n            this.renderMenuItems(),\n            (v) => v.props.position === 'right'\n          )}\n          {this.renderLogoutModal()}\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nconst MapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n  };\n};\n\nexport default connect(MapStateToProps, { deleteAmcatSession })(HeaderMenu);\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import Axios from 'axios';\n\nexport default async function newAmcatSession(host, email, password) {\n  const response = await Axios.get(`${host}/auth/token/`, {\n    auth: { username: email, password: password },\n  });\n  return new Amcat(host, email, response.data.token);\n}\n\nclass Amcat {\n  constructor(host, email, token) {\n    this.host = host;\n    this.email = email;\n    this.api = Axios.create({\n      baseURL: host,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  // GET\n  getIndices() {\n    return this.api.get(`/index/`);\n  }\n  getIndex(index) {\n    return this.api.get(`/index/${index}`);\n  }\n  getFields(index) {\n    return this.api.get(`/index/${index}/fields`);\n  }\n  getFieldValues(index, field) {\n    return this.api.get(`/index/${index}/fields/${field}/values`);\n  }\n  getDocument(index, doc_id) {\n    return this.api.get(`/index/${index}/documents/${doc_id}`);\n  }\n\n  getQuery(\n    index,\n    q,\n    fields,\n    scroll = '2m',\n    per_page = 100,\n    params = {},\n    filters = {}\n  ) {\n    params['scroll'] = scroll; // for scrolling, update with id obtained from results.meta.scroll_id\n    params['per_page'] = per_page;\n    console.log(fields.join(','));\n    if (fields) params['fields'] = fields.join(',');\n    if (q) params['q'] = q;\n    if (filters) params = { ...params, ...filters };\n\n    return this.api.get(`/index/${index}/query`, { params });\n  }\n\n  postQuery(\n    index,\n    q,\n    fields,\n    scroll = '2m',\n    per_page = 100,\n    params = {},\n    filters = {}\n  ) {\n    params['scroll'] = scroll;\n    params['per_page'] = per_page;\n    if (fields) params['fields'] = fields.join(',');\n    if (q) params['q'] = q;\n    if (filters) params['filters'] = { ...filters };\n\n    return this.api.post(`/index/${index}/query`, { ...params });\n  }\n\n  // POST\n  createIndex(name, guestRole = 'NONE') {\n    const body = { name: name };\n    if (guestRole !== 'NONE') body.guest_role = guestRole;\n    return this.api.post(`/index/`, body);\n  }\n  createDocuments(name, documentList) {\n    // documentList should be an array of objects with at least the fields title, date and text\n    return this.api.post(`/index/${name}/documents`, documentList);\n  }\n\n  // DELETE\n  deleteIndex(index) {\n    return this.api.delete(`/index/${index}`);\n  }\n\n  // CREATE USER\n  createUser(\n    username,\n    pass,\n    role,\n    giveAccess = false,\n    index = null,\n    params = {}\n  ) {\n    params['email'] = username;\n    params['password'] = pass;\n    params['global_role'] = role;\n    if (giveAccess) {\n      params['index_access'] = true;\n      params['index'] = index;\n    }\n    return this.api.post('/users/', { ...params });\n  }\n\n  // GET USERS\n  getUsers() {\n    return this.api.get(`/users/all`);\n  }\n\n  // GET USERS\n  deleteUser(email) {\n    return this.api.delete(`/users/${email}`);\n  }\n\n  // MODIFY USER\n  modifyUser(\n    oldEmail,\n    email = null,\n    password = null,\n    index = null,\n    role = null,\n    params = {}\n  ) {\n    if (email) params['email'] = email;\n    if (password) params['password'] = password;\n    if (index) params['index'] = index;\n    if (role) params['global_role'] = role;\n\n    return this.api.put(`/users/${oldEmail}`, params);\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport history from '../history';\n\nimport { createAmcatSession } from '../actions';\nimport newAmcatSession from '../apis/amcat';\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\n\nconst color = 'blue';\n\n// just delete this if you dont want default users\nconst defaultLoginCredentials = {\n  host: 'http://127.0.0.1:5000',\n  email: 'admin',\n  password: 'admin',\n};\n\nclass AmcatLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      host: defaultLoginCredentials.host ? defaultLoginCredentials.host : null,\n      email: defaultLoginCredentials.email\n        ? defaultLoginCredentials.email\n        : null,\n      password: defaultLoginCredentials.password\n        ? defaultLoginCredentials.password\n        : null,\n      loginStatus: 'idle',\n    };\n  }\n\n  submitForm = async () => {\n    this.setState({\n      loginStatus: 'waiting',\n    });\n\n    newAmcatSession(this.state.host, this.state.email, this.state.password)\n      .then((amcat) => {\n        this.props.createAmcatSession(amcat);\n        this.setState({\n          loginStatus: 'success',\n        });\n        history.push(this.props.items[0].path);\n      })\n      .catch((e) => {\n        this.setState({\n          loginStatus: 'error',\n        });\n      });\n  };\n\n  renderLoginForm() {\n    return (\n      <Form size=\"large\">\n        <Segment stacked>\n          <Form.Input\n            fluid\n            error={this.state.status === 'error'}\n            value={this.state.host}\n            onChange={(e, { value }) => {\n              this.setState({\n                loginStatus: 'idle',\n                host: value,\n              });\n            }}\n            icon=\"home\"\n            iconPosition=\"left\"\n            placeholder=\"Host\"\n          />\n\n          <Form.Input\n            fluid\n            error={this.state.status === 'error'}\n            value={this.state.email}\n            onChange={(e, { value }) => {\n              this.setState({\n                loginStatus: 'idle',\n                email: value,\n              });\n            }}\n            icon=\"user\"\n            iconPosition=\"left\"\n            placeholder=\"Email adress\"\n          />\n\n          <Form.Input\n            fluid\n            error={this.state.status === 'error'}\n            value={this.state.password}\n            onChange={(e, { value }) => {\n              this.setState({\n                loginStatus: 'idle',\n                password: value,\n              });\n            }}\n            icon=\"lock\"\n            iconPosition=\"left\"\n            placeholder=\"Password\"\n            type=\"password\"\n          />\n\n          <Button onClick={this.submitForm} color={color} fluid size=\"large\">\n            Login\n          </Button>\n        </Segment>\n      </Form>\n    );\n  }\n\n  render() {\n    return (\n      <Grid\n        inverted\n        textAlign=\"center\"\n        style={{ height: '100vh' }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color={color} textAlign=\"center\">\n            <Image src=\"/amcat-logo.svg\" /> Connect to AmCAT server\n          </Header>\n          {this.renderLoginForm()}\n          <Message>Don't have an account? So Sad!</Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    amcat: state.amcat,\n    items: ownProps.items,\n  };\n};\n\nexport default connect(mapStateToProps, { createAmcatSession })(AmcatLogin);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router';\n\nclass AuthRoute extends React.Component {\n  render() {\n    if (!this.props.amcat) return <Redirect to=\"/\" />;\n    return (\n      <Route\n        {...this.props.ownProps.componentProps}\n        render={(props) => (\n          <this.props.ownProps.Component\n            {...this.props.ownProps.componentProps}\n            {...props}\n          />\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    amcat: state.amcat,\n    ownProps: ownProps,\n  };\n};\n\nexport default connect(mapStateToProps, {})(AuthRoute);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// creating a portal\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"ui dimmer modals visible active\" onClick={props.onDismiss}>\n      <div\n        className=\"ui standard modal visible active\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <i className=\"close icon\" onClick={props.onDismiss} />\n        <div className=\"header\">{props.title}</div>\n        <div className=\"content\">{props.content}</div>\n        <div className=\"actions\">{props.actions}</div>\n      </div>\n    </div>,\n    document.querySelector('#modal')\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\n\nimport { Modal } from 'semantic-ui-react';\n\nconst QueryHelp = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <span\n          style={{\n            cursor: 'pointer',\n            color: 'blue',\n            float: 'right',\n          }}\n        >\n          Query help\n        </span>\n      }\n    >\n      <Modal.Header>Query help</Modal.Header>\n      <Modal.Content>\n        <p>\n          If there is no boolean operator between two terms, the OR operator is\n          used. Therefore, the query \"a b\" is parsed as \"a OR b\".\n        </p>\n        <h4>Search Identifier</h4>\n        <p>\n          identifier#query = separate the identifier from the query with the #\n          character, such as pvda#pvda OR \"wouter bos\" OR \"partij van de arbeid\"\n          The query identifier can be used in further queries, marked with\n          [brackets]. Example: partijen#[pvda] OR [cda] (where pvda and cda have\n          been previously defined)\n        </p>\n        <h4>Wildcards</h4>\n        <p>\n          ? = Single character wildcard, like te?t will find both test and text\n          * = Multiple character wildcard, like mosl* will find moslim, moslims,\n          etc.\n        </p>\n        <p>Note: You can not start a term with a wildcard</p>\n        <h4>Proximity Search</h4>\n        <p>\n          \"word1 word2\"~10 = Search with word distance 10 between word1 and\n          word2\n        </p>\n        <p>\n          \"(word1 OR word2 OR word*) word3\"~5 = Search with word distance 5\n          between word1 OR word2 OR word*, and word3\n        </p>\n        <h4>Fuzzy Search</h4>\n        <p>\n          koe~ or koe~0.9 = fuzzy search where the value should be between 0\n          (low similarity) and 1 (high similarity)\n        </p>\n        <h4>NOT</h4>\n        <p>\n          word1 NOT (word2 word3) = Search for documents containing word1 and\n          not word2 and not word3\n        </p>\n        <h4>Headline only</h4>\n        <p>Use headline:keyword to only search the headline for \"keyword\"</p>\n\n        <a href=\"https://lucene.apache.org/core/3_4_0/queryparsersyntax.html\">\n          More info about the Lucene query syntax\n        </a>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default QueryHelp;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Segment,\n  Grid,\n  Container,\n  Form,\n  Button,\n  Icon,\n  Item,\n} from 'semantic-ui-react';\n\nimport Modal from './modal';\nimport history from '../history';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport QueryHelp from './QueryHelp';\nimport { setDocuments, setQueryString, setLatestQueries } from '../actions';\n\nclass Home extends React.Component {\n  renderCurrentSetting() {\n    const currentSetting = [\n      {\n        title: 'Current Project:',\n        path: '/indices',\n        prop: this.props.amcatIndex\n          ? this.props.amcatIndex.name\n          : 'No Project Selected!',\n      },\n      {\n        title: 'Role in Project:',\n        path: this.props.amcatIndex ? '/userManagement' : '/indices',\n        prop: this.props.amcatIndex\n          ? `${this.props.amcatIndex.role}`\n          : 'No Project Selected',\n      },\n      {\n        title: 'Last Query:',\n        path: '/query',\n        prop: this.props.queryString\n          ? this.props.queryString\n          : 'No Previous Queries',\n      },\n      {\n        title: 'Remaining Tasks:',\n        path: '#',\n        prop: 'ToDo',\n      },\n    ];\n\n    return currentSetting.map((setting) => {\n      return (\n        <Item key={setting.title}>\n          <Item.Content>\n            {setting.title}\n            <Button\n              size=\"small\"\n              positive\n              floated=\"right\"\n              onClick={() => {\n                history.push(setting.path);\n              }}\n            >\n              {setting.prop}\n              <Icon name=\"right chevron\" />\n            </Button>\n          </Item.Content>\n        </Item>\n      );\n    });\n  }\n\n  renderCoreFunctionalities() {\n    const corefuncs = [\n      {\n        title: 'Select Project:',\n        path: '/indices',\n        btnText: 'Manage Project!',\n      },\n      {\n        title: 'Upload Documents:',\n        path: '/indices',\n        btnText: 'Manage Documents!',\n      },\n      {\n        title: 'Run Queries:',\n        path: '/query',\n        btnText: 'Run Queries',\n      },\n      {\n        title: 'User Management',\n        path: this.props.amcatIndex ? '/userManagement' : '/indices',\n        btnText: this.props.amcatIndex\n          ? 'Manage User Access!'\n          : 'No Project Selected',\n      },\n    ];\n\n    return corefuncs.map((funcs) => {\n      return (\n        <Item key={funcs.title}>\n          <Item.Content>\n            {funcs.title}\n            <Button\n              size=\"small\"\n              primary\n              floated=\"right\"\n              onClick={() => {\n                history.push(funcs.path);\n              }}\n            >\n              {funcs.btnText}\n              <Icon name=\"right chevron\" />\n            </Button>\n          </Item.Content>\n        </Item>\n      );\n    });\n  }\n\n  renderAmcatPlugins() {\n    const Plugins = [\n      {\n        title: 'AmCAT Annotator:',\n        path: '#',\n        btnText: 'ToDo',\n      },\n      {\n        title: 'Run NLP Methods:',\n        path: '#',\n        btnText: 'ToDo',\n      },\n      {\n        title: 'Non-consumptive Research:',\n        path: '#',\n        btnText: 'ToDo',\n      },\n    ];\n\n    return Plugins.map((plugIn) => {\n      return (\n        <Item key={plugIn.title}>\n          <Item.Content>\n            {plugIn.title}\n            <Button\n              size=\"small\"\n              floated=\"right\"\n              onClick={() => {\n                history.push(plugIn.path);\n              }}\n            >\n              {plugIn.btnText}\n              <Icon name=\"right chevron\" />\n            </Button>\n          </Item.Content>\n        </Item>\n      );\n    });\n  }\n\n  renderActions() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"ui button primary\"\n          onClick={() => history.push('/indices')}\n        >\n          Lets go!\n        </button>\n      </React.Fragment>\n    );\n  }\n\n  renderQueryWindow() {\n    return (\n      <Grid>\n        <Grid.Column width={16} style={{ marginBottom: '50px' }}>\n          <h2>Quick Start:</h2>\n          <Form style={{ marginBottom: '2em' }}>\n            <TextareaAutosize\n              width={16}\n              value={this.props.queryString ? this.props.queryString : ''}\n              style={{ height: 20 }}\n              placeholder={`Run a Query on ${\n                this.props.amcatIndex ? this.props.amcatIndex.name : '...'\n              }`}\n              onChange={(e) => this.props.setQueryString(e.target.value)}\n            />\n          </Form>\n\n          <Form>\n            <Button.Group widths=\"2\">\n              <Button primary type=\"submit\" onClick={() => this.runQuery()}>\n                <Icon name=\"search\" />\n                Execute Query\n              </Button>\n            </Button.Group>\n          </Form>\n          <QueryHelp />\n          <br />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n\n  runQuery() {\n    this.props.amcat\n      .postQuery(\n        this.props.amcatIndex.name,\n        this.props.queryString,\n        // this.fields,\n        '',\n        '2m',\n        100,\n        {},\n        {}\n      )\n      .then((res) => {\n        this.props.setDocuments(res.data.results);\n        this.addToQueryStrings(this.props.queryString);\n        history.push('/query');\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  addToQueryStrings(query) {\n    let queryStrings = [...this.props.latestQueries];\n    if (!queryStrings.includes(query)) {\n      queryStrings.unshift(query);\n    }\n    this.props.setLatestQueries(queryStrings);\n  }\n\n  renderAmcatLogo() {\n    return (\n      <React.Fragment>\n        <img\n          className=\"ui centered medium image\"\n          src=\"/media/AmCATLogo.png\"\n          alt=\"AmCAT Logo\"\n        />\n        <div\n          className=\"ui one column stackable center aligned page grid\"\n          style={{ marginTop: '15px', marginBottom: '30px' }}\n        ></div>\n      </React.Fragment>\n    );\n  }\n\n  renderHome() {\n    return (\n      <Container>\n        <h2>Hello {this.props.user}</h2>\n        <Grid>\n          <Grid.Column floated=\"left\" width={16}>\n            <Grid.Row>\n              <Segment style={{ border: '1' }}>\n                <div className=\"content\">\n                  <h4>Here are your current settings:</h4>\n                </div>\n                <Item.Group divided>{this.renderCurrentSetting()}</Item.Group>\n              </Segment>\n              <Segment style={{ border: '1' }}>\n                <h4>Core Funcionalities</h4>\n                <Item.Group divided>\n                  {this.renderCoreFunctionalities()}\n                </Item.Group>\n              </Segment>\n              <Segment style={{ border: '1' }}>\n                <h4>AmCAT Plugins</h4>\n                <Item.Group divided>{this.renderAmcatPlugins()}</Item.Group>\n              </Segment>\n            </Grid.Row>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n\n  renderModal() {\n    if (!this.props.amcatIndex) {\n      return (\n        <Modal\n          title=\"You have not selected an project yet!\"\n          content=\"Please take me to the select project page!\"\n          actions={this.renderActions()}\n        />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={16} floated=\"left\">\n            {this.renderAmcatLogo()}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16} floated=\"left\">\n            {this.renderQueryWindow()}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16} floated=\"left\">\n            {this.renderModal()}\n            {this.props.amcatIndex && this.renderHome()}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n    user: state.amcat.email,\n    host: state.amcat.host,\n    amcatIndex: state.amcatIndex,\n    queryString: state.queryString,\n    latestQueries: state.latestQueries,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDocuments,\n  setQueryString,\n  setLatestQueries,\n})(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport history from '../history';\nimport { setAllUsers } from '../actions';\n\nimport {\n  Table,\n  Grid,\n  Item,\n  Button,\n  Icon,\n  Input,\n  Modal,\n  Header,\n  Dropdown,\n} from 'semantic-ui-react';\n\nconst options = [\n  { key: 'admin', text: 'Admin', value: 'ADMIN' },\n  { key: 'writer', text: 'Writer', value: 'WRITER' },\n];\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      newUsername: '',\n      newUserpass: '',\n      newUserrole: '',\n      updatedIndex: '',\n      updatedRole: '',\n      selectedUser: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.amcatIndex.role === 'ADMIN' &&\n      this.props.amcat.getUsers().then((e) => {\n        this.props.setAllUsers(e.data);\n      });\n  }\n\n  renderCurrentSetting() {\n    const currentSetting = [\n      {\n        title: 'Current User:',\n        path: '#',\n        prop: this.props.user,\n      },\n      {\n        title: 'Current Project:',\n        path: '/indices',\n        prop: this.props.amcatIndex.name,\n      },\n      {\n        title: 'Role in Project:',\n        path: '/userManagement',\n        prop: `${this.props.amcatIndex.role}`,\n      },\n    ];\n\n    return currentSetting.map((setting) => {\n      return (\n        <Item key={setting.title}>\n          <Item.Content>\n            {setting.title}\n            <Button\n              positive\n              floated=\"right\"\n              onClick={() => {\n                history.push(setting.path);\n              }}\n            >\n              {setting.prop}\n              <Icon name=\"right chevron\" />\n            </Button>\n          </Item.Content>\n        </Item>\n      );\n    });\n  }\n\n  renderTableCells() {\n    return this.props.allUsers.map((user) => {\n      return (\n        <Table.Row>\n          <Table.Cell>{user.user}</Table.Cell>\n          <Table.Cell>{user.index_name}</Table.Cell>\n          <Table.Cell>{user.role}</Table.Cell>\n          <Table.Cell>\n            <Button.Group fluid>\n              <Button\n                positive\n                size=\"small\"\n                onClick={() =>\n                  this.setState({\n                    selectedUser: {\n                      oldUser: user.user,\n                      role: user.role,\n                      index: user.index_name,\n                    },\n                    openEditModal: true,\n                  })\n                }\n              >\n                Edit User\n              </Button>\n              <Button.Or />\n              <Button\n                negative\n                size=\"small\"\n                onClick={() => {\n                  this.props.amcat.deleteUser(user.user);\n                  let updatedAllUsers = this.props.allUsers.filter((obj) => {\n                    return obj.user !== user.user;\n                  });\n\n                  this.props.setAllUsers(updatedAllUsers);\n                }}\n              >\n                Delete User\n              </Button>\n            </Button.Group>\n          </Table.Cell>\n        </Table.Row>\n      );\n    });\n  }\n\n  renderAdminFuncs() {\n    if (this.props.amcatIndex.role !== 'ADMIN') {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h3 style={{ marginTop: '50px' }}>Administrative Tasks:</h3>\n        <Table compact celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell width={4}>User</Table.HeaderCell>\n              <Table.HeaderCell width={3}>Project</Table.HeaderCell>\n              <Table.HeaderCell width={3}>Role in Project</Table.HeaderCell>\n              <Table.HeaderCell width={4}>Actions</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>{this.renderTableCells()}</Table.Body>\n\n          <Table.Footer fullWidth>\n            <Table.Row>\n              <Table.HeaderCell />\n              <Table.HeaderCell colSpan=\"4\">\n                <Button\n                  floated=\"right\"\n                  icon\n                  labelPosition=\"left\"\n                  primary\n                  size=\"small\"\n                  onClick={() => {\n                    this.setState({ open: true });\n                  }}\n                >\n                  <Icon name=\"user\" /> Add New User\n                </Button>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </React.Fragment>\n    );\n  }\n\n  renderAddUserModal() {\n    return (\n      <Modal\n        closeIcon\n        open={this.state.open}\n        size=\"small\"\n        onClose={() => this.setState({ open: false })}\n        onOpen={() => this.setState({ open: true })}\n      >\n        <Header icon=\"user\" content=\"Create new user\" />\n        <Modal.Content>\n          <Input\n            label=\"Username\"\n            placeholder=\"...\"\n            style={{ marginRight: '1rem' }}\n            onChange={(e) => {\n              this.setState({\n                newUsername: e.target.value,\n              });\n            }}\n          />\n\n          <Input\n            label=\"Password\"\n            placeholder=\"...\"\n            style={{ marginRight: '1rem' }}\n            onChange={(e) => {\n              this.setState({\n                newUserpass: e.target.value,\n              });\n            }}\n          />\n\n          <Dropdown\n            button\n            basic\n            floating\n            value={this.state.newUserrole}\n            options={options}\n            onChange={(e, { value }) => {\n              this.setState({\n                newUserrole: value,\n              });\n            }}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"red\"\n            onClick={() => {\n              this.setState({ open: false });\n            }}\n          >\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n          <Button\n            color=\"green\"\n            onClick={() => {\n              this.props.amcat\n                .createUser(\n                  this.state.newUsername,\n                  this.state.newUserpass,\n                  this.state.newUserrole,\n                  true,\n                  this.props.amcatIndex.name\n                )\n                .then((e) => {\n                  this.props.allUsers.push({\n                    index_name: this.props.amcatIndex.name,\n                    role: this.state.newUserrole,\n                    user: this.state.newUsername,\n                  });\n                  this.props.setAllUsers(this.props.allUsers);\n                  this.setState({ open: false });\n                });\n            }}\n          >\n            <Icon name=\"checkmark\" /> Add\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  renderUserEditModal() {\n    return (\n      <Modal\n        closeIcon\n        open={this.state.openEditModal}\n        size=\"large\"\n        fluid\n        onClose={() => this.setState({ openEditModal: false })}\n        onOpen={() => this.setState({ openEditModal: true })}\n      >\n        <Header\n          icon=\"user\"\n          content={`Edit user ${this.state.selectedUser.user}`}\n        />\n\n        <Modal.Content>\n          <Input\n            label=\"Email\"\n            placeholder={this.state.selectedUser.oldUser}\n            style={{ marginRight: '1rem' }}\n            onChange={(e) => {\n              this.setState({\n                selectedUser: {\n                  ...this.state.selectedUser,\n                  user: e.target.value,\n                },\n              });\n            }}\n          />\n\n          <Input\n            label=\"Password\"\n            placeholder=\"...\"\n            style={{ marginRight: '1rem' }}\n            onChange={(e) => {\n              this.setState({\n                selectedUser: {\n                  ...this.state.selectedUser,\n                  password: e.target.value,\n                },\n              });\n            }}\n          />\n\n          <Input\n            label=\"Project\"\n            placeholder={this.state.selectedUser.index}\n            style={{ marginRight: '1rem' }}\n            onChange={(e) => {\n              this.setState({\n                selectedUser: {\n                  ...this.state.selectedUser,\n                  index: e.target.value,\n                },\n              });\n            }}\n          />\n\n          <Dropdown\n            button\n            basic\n            floating\n            value={this.state.selectedUser.role}\n            options={options}\n            onChange={(e, { value }) => {\n              this.setState({\n                selectedUser: {\n                  ...this.state.selectedUser,\n                  role: value,\n                },\n              });\n            }}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"red\"\n            onClick={() => {\n              this.setState({ openEditModal: false });\n            }}\n          >\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n          <Button\n            color=\"green\"\n            onClick={() => {\n              let selUser = this.state.selectedUser;\n              this.props.amcat\n                .modifyUser(\n                  selUser.oldUser,\n                  selUser.user,\n                  selUser.password,\n                  selUser.index,\n                  selUser.role\n                )\n                .then((e) => {\n                  this.props.allUsers.forEach(function (obj) {\n                    if (obj.user === selUser.oldUser) {\n                      obj.user = selUser.user ? selUser.user : selUser.oldUser;\n                      obj.index_name = selUser.index;\n                      obj.role = selUser.role;\n                    }\n                  });\n                  this.props.setAllUsers(this.props.allUsers);\n                  this.setState({ openEditModal: false });\n                });\n            }}\n          >\n            <Icon name=\"checkmark\" /> Edit\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <Grid celled=\"internally\">\n        <Grid.Row>\n          <Grid.Column width={16} floated=\"left\">\n            <h3>Current User and Access:</h3>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16} floated=\"left\">\n            <Item.Group divided>{this.renderCurrentSetting()}</Item.Group>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16} floated=\"left\">\n            {this.renderAdminFuncs()}\n            {this.renderAddUserModal()}\n            {this.renderUserEditModal()}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n    user: state.amcat.email,\n    host: state.amcat.host,\n    amcatIndex: state.amcatIndex,\n    allUsers: state.allUsers,\n  };\n};\n\nexport default connect(mapStateToProps, { setAllUsers })(Admin);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { setFieldValues } from '../actions';\n\nimport { Form } from 'semantic-ui-react';\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\n\nclass DocumentForms extends React.Component {\n  onSubmit(key, value) {\n    const newFieldValues = { ...this.props.fieldValues };\n    newFieldValues[key] = value;\n    this.props.setFieldValues(newFieldValues);\n  }\n\n  render() {\n    if (!this.props.fields) return null;\n    return Object.keys(this.props.fields).map((key) => {\n      if (this.props.fields[key] === 'date') {\n        return (\n          <SemanticDatepicker\n            key={key}\n            label={key}\n            value={\n              this.props.fieldValues[key] ? this.props.fieldValues[key] : ''\n            }\n            onChange={(e, d) => {\n              this.onSubmit(d.label, d.value);\n            }}\n          />\n        );\n      } else if (this.props.fields[key] === 'text') {\n        return (\n          <Form.TextArea\n            key={key}\n            value={\n              this.props.fieldValues[key] ? this.props.fieldValues[key] : ''\n            }\n            onChange={(e, d) => this.onSubmit(key, d.value)}\n            label={key}\n          />\n        );\n      } else if (this.props.fields[key] === 'keyword') {\n        return (\n          <Form.TextArea\n            key={key}\n            value={\n              this.props.fieldValues[key] ? this.props.fieldValues[key] : ''\n            }\n            onChange={(e, d) => this.onSubmit(key, d.value)}\n            label={key}\n          />\n        );\n      }\n      return null;\n    });\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    fields: state.indexFields,\n    fieldValues: state.fieldValues,\n  };\n};\n\nexport default connect(mapStateToProps, { setFieldValues })(DocumentForms);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport DocumentForms from './DocumentForms';\nimport { setIndexFields, setFieldValues } from '../actions';\n\nimport { Form, Button } from 'semantic-ui-react';\n\nclass CreateDocument extends React.Component {\n  componentDidMount() {\n    if (this.props.amcatIndex && this.props.amcat) {\n      this.props.amcat.getFields(this.props.amcatIndex.name).then((res) => {\n        this.props.setIndexFields(res.data);\n      });\n    } else {\n      this.props.setIndexFields(null);\n    }\n  }\n\n  onCreate = () => {\n    let submitData = { ...this.props.fieldValues };\n\n    for (const key of Object.keys(submitData)) {\n      if (key === 'date' || /_date$/.test(key)) {\n        submitData[key] = submitData[key].toISOString();\n      }\n    }\n\n    this.props.amcat\n      .createDocuments(this.props.amcatIndex.name, [submitData])\n      .then((res) => {\n        // maybe check for 201 before celebrating\n\n        this.props.setFieldValues({});\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  render() {\n    return (\n      <Form>\n        <DocumentForms />\n        {!this.props.amcatIndex ? null : (\n          <Button primary onClick={this.onCreate}>\n            Create document\n          </Button>\n        )}\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n    amcatIndex: state.amcatIndex,\n    indexFields: state.indexFields,\n    fieldValues: state.fieldValues,\n  };\n};\n\nexport default connect(mapStateToProps, { setIndexFields, setFieldValues })(\n  CreateDocument\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Header, Message } from 'semantic-ui-react';\n\nclass AmcatIndexDetails extends React.Component {\n  render() {\n    if (!this.props.amcatIndex) return null;\n    return (\n      <Container>\n        <>\n          <Header textAlign=\"center\">{this.props.amcatIndex.name}</Header>\n          <Message\n            header=\"I am an Project\"\n            content=\"And here should be some stuff that you can do with an index\"\n          />\n        </>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcatIndex: state.amcatIndex,\n  };\n};\n\nexport default connect(mapStateToProps, {})(AmcatIndexDetails);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { selectAmcatIndex, setAmcatIndices } from '../actions';\n\nimport { Button, Header, Icon, Modal, Dimmer, Loader } from 'semantic-ui-react';\n\nclass DeleteAmcatIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalStatus: 'inactive',\n    };\n  }\n\n  onSubmit = (event) => {\n    this.setState({\n      modalStatus: 'pending',\n    });\n\n    this.props.amcat\n      .deleteIndex(this.props.amcatIndex.name)\n      .then((res) => {\n        // maybe check for 201 before celebrating\n        if (this.props.amcat) {\n          this.props.amcat.getIndices().then((res) => {\n            this.props.selectAmcatIndex(null);\n            this.props.setAmcatIndices(res.data);\n          });\n        }\n        this.setState({\n          modalStatus: 'inactive',\n        });\n      })\n      .catch((e) => {\n        console.log(e.message);\n        console.log(e);\n        this.setState({\n          modalStatus: 'error',\n        });\n      });\n  };\n\n  render() {\n    return (\n      <Modal\n        closeIcon\n        open={this.state.modalStatus !== 'inactive'}\n        trigger={\n          <Button disabled={!this.props.amcatIndex} name=\"Delete Project\">\n            <Icon name=\"minus\" /> Delete Project\n          </Button>\n        }\n        onClose={() => {\n          this.setState({\n            modalStatus: 'inactive',\n          });\n        }}\n        onOpen={() => {\n          this.setState({\n            modalStatus: 'awaiting input',\n          });\n        }}\n      >\n        <Header\n          icon=\"trash\"\n          content={`Delete Project ${\n            this.props.amcatIndex ? this.props.amcatIndex.name : null\n          }`}\n        />\n        <Modal.Content>\n          <p>Do you really want to delete this project?</p>\n        </Modal.Content>\n        <Modal.Actions>\n          {this.state.modalStatus === 'error' ? (\n            <div>\n              Could not delete index for a reason not yet covered in the error\n              handling...\n            </div>\n          ) : null}\n          {this.state.modalStatus === 'pending' ? (\n            <Dimmer active inverted>\n              <Loader content=\"Creating Project\" />\n            </Dimmer>\n          ) : (\n            <>\n              <Button\n                color=\"green\"\n                onClick={() =>\n                  this.setState({\n                    modalStatus: 'inactive',\n                  })\n                }\n              >\n                <Icon name=\"remove\" /> No\n              </Button>\n              <Button color=\"red\" onClick={this.onSubmit}>\n                <Icon name=\"checkmark\" /> Yes\n              </Button>\n            </>\n          )}\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n  };\n};\n\nexport default connect(mapStateToProps, { selectAmcatIndex, setAmcatIndices })(\n  DeleteAmcatIndex\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSVDownload } from 'react-csv';\nimport { selectDocument } from '../actions';\n\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from 'react-table';\nimport history from '../history';\n\nimport {\n  Segment,\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHeaderCell,\n  TableCell,\n  Pagination,\n  Dropdown,\n  Icon,\n  Button,\n} from 'semantic-ui-react';\n\n// Uses react-table with semantic ui. The columns and data arguments are lists of objects\n// The 'columns' argument specifies column names (Header) and the names of the keys to get from data.\n//\n// const columns = [\n//   { Header: \"ID\", accessor: \"id\", headerClass: \"one wide\" },\n//   { Header: \"Name\", accessor: \"text\", headerClass: \"one wide\" },\n// ]\n//\n// Note that headerClass is custom, and enables setting the header cell class,\n// which is used in semantic ui to specify the width (one wide, ten wide, etc).\n\nconst SelectionTable = ({\n  columns,\n  data,\n  selectedRow,\n  setSelectedRow,\n  defaultSize = 20,\n  sizeSelector = false,\n  downloadArticleSet = true,\n}) => {\n  const [activeRow, setActiveRow] = useState(\n    selectedRow ? selectedRow.ROW_ID : null\n  );\n\n  const dispatch = useDispatch();\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n  const document = useSelector((state) => state.document);\n  const [csvDoc, setcsvDoc] = useState(null);\n  const documents = useSelector((state) => state.documents);\n  const [csvDocs, setcsvDocs] = useState(null);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageCount,\n    gotoPage,\n    setPageSize,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: { pageIndex, globalFilter },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageSize: defaultSize, globalFilter: '' },\n    },\n\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  useEffect(() => {\n    if (selectedRow) {\n      setActiveRow(selectedRow.ROW_ID);\n    } else {\n      setActiveRow(null);\n    }\n  }, [selectedRow, dispatch]);\n\n  useEffect(() => {\n    if (amcat && amcatIndex && document.ORG_ID) {\n      amcat.getDocument(amcatIndex.name, document.ORG_ID).then((res) => {\n        dispatch(selectDocument(res.data));\n      });\n    }\n  }, [amcat, amcatIndex, dispatch, document.ORG_ID]);\n\n  const onRowSelect = (row) => {\n    if (activeRow && activeRow === row.id) {\n      setSelectedRow(null);\n      setActiveRow(null);\n    } else {\n      setSelectedRow({\n        ...row.values,\n        ROW_ID: row.id,\n        ORG_ID: row.original._id,\n      });\n      setActiveRow(row.id);\n    }\n  };\n\n  const convertToCSV = (arr, multiple = false) => {\n    let array = [];\n    if (multiple) {\n      array = [arr];\n    } else array = [Object.keys(arr)].concat(arr);\n\n    return array\n      .map((it, idx) => {\n        if (idx === 3) {\n          return Object.values(it).toString();\n        } else\n          return Object.entries(it).map((item) => {\n            if (multiple)\n              return ('\"' + item[1].replace(/\"/g, \"'\") + '\"').replace(\n                /\\n/g,\n                ''\n              );\n            else return ('\"' + item[1] + '\"').replace(/\\n/g, '');\n          });\n      })\n      .join('\\n');\n  };\n\n  const prepareDocumentCVS = (document) => {\n    setcsvDoc(convertToCSV(document));\n    setTimeout(() => {\n      setcsvDoc(null);\n    }, 100);\n  };\n\n  const prepareDocumentsCVS = (documents) => {\n    const res = [];\n    res.push(Object.values(Object.keys(documents[0])).toString());\n    documents.forEach((doc) => {\n      res.push([convertToCSV(doc, true)]);\n    });\n    setcsvDocs(res.join('\\n'));\n    setTimeout(() => {\n      setcsvDocs(null);\n    }, 100);\n  };\n\n  const createHeader = (headerGroup) => {\n    return headerGroup.headers.map((column) => {\n      return (\n        <TableHeaderCell\n          className={column.headerClass}\n          {...column.getHeaderProps(column.getSortByToggleProps())}\n        >\n          {column.render('Header')}\n          <span>\n            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\n          </span>\n        </TableHeaderCell>\n      );\n    });\n  };\n\n  const createBody = (page) => {\n    return page.map((row, i) => {\n      prepareRow(row);\n\n      return (\n        <TableRow\n          active={row.id === activeRow}\n          onClick={() => onRowSelect(row)}\n          {...row.getRowProps()}\n        >\n          {row.cells.map((cell) => {\n            return (\n              <TableCell\n                {...cell.getCellProps()}\n                style={{\n                  color: `${row.id === activeRow ? '#0E6EB8' : ''}`,\n                }}\n              >\n                {cell.render('Cell')}\n                {row.id === activeRow && cell.column.Header === 'Title' ? (\n                  <Button.Group floated=\"right\" style={{ marginRight: '20px' }}>\n                    <button\n                      className=\"ui primary button float left\"\n                      onClick={(e) => {\n                        history.push('/browseDocument');\n                        e.stopPropagation();\n                      }}\n                    >\n                      Browse!\n                    </button>\n                    <Button\n                      className=\"ui primary button float left\"\n                      onClick={(e) => {\n                        prepareDocumentCVS(document);\n                        e.stopPropagation();\n                      }}\n                    >\n                      Download\n                    </Button>\n                    {csvDoc != null ? (\n                      <CSVDownload\n                        data={csvDoc}\n                        target=\"_blank\"\n                        filename={'articleSet.csv'}\n                      />\n                    ) : null}\n                  </Button.Group>\n                ) : (\n                  ''\n                )}\n              </TableCell>\n            );\n          })}\n        </TableRow>\n      );\n    });\n  };\n\n  if (data.length === 0) return <Segment>No Documents Found</Segment>;\n  return (\n    <Segment style={{ border: '0' }}>\n      <GlobalFilter\n        preGlobalFilteredRows={preGlobalFilteredRows}\n        globalFilter={globalFilter}\n        setGlobalFilter={setGlobalFilter}\n        numDocs={data.length}\n      />\n\n      <Table\n        unstackable\n        striped\n        fixed\n        singleLine\n        selectable\n        compact\n        {...getTableProps()}\n      >\n        <TableHeader>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {createHeader(headerGroup)}\n            </TableRow>\n          ))}\n        </TableHeader>\n        <TableBody {...getTableBodyProps()}>{createBody(page)}</TableBody>\n      </Table>\n\n      {sizeSelector ? (\n        <Dropdown\n          text=\"show per page\"\n          options={[10, 25, 50, 100, 500].map((n) => ({ value: n, text: n }))}\n          onChange={(e, d) => {\n            setPageSize(d.value);\n          }}\n        />\n      ) : null}\n\n      <div\n        style={{\n          marginTop: '1em',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {downloadArticleSet === true ? (\n          <Button\n            className=\"ui primary button float left fluid\"\n            style={{ marginRight: '30px' }}\n            onClick={(e) => {\n              prepareDocumentsCVS(documents);\n              e.stopPropagation();\n            }}\n          >\n            Download Article Set\n          </Button>\n        ) : null}\n\n        {csvDocs != null ? (\n          <CSVDownload\n            data={csvDocs}\n            target=\"_blank\"\n            filename={'articleSet.csv'}\n          />\n        ) : null}\n        {data.length > defaultSize ? (\n          <Pagination\n            style={{ border: '0' }}\n            size=\"mini\"\n            firstItem={false}\n            lastItem={false}\n            nextItem={false}\n            prevItem={false}\n            boundaryRange={1}\n            ellipsisItem={{\n              content: <Icon name=\"ellipsis horizontal\" />,\n              icon: true,\n            }}\n            activePage={pageIndex + 1}\n            totalPages={pageCount}\n            onPageChange={(event, data) => {\n              gotoPage(data.activePage - 1);\n            }}\n          />\n        ) : null}\n      </div>\n    </Segment>\n  );\n};\n\nconst GlobalFilter = ({ globalFilter, setGlobalFilter, numDocs }) => {\n  return (\n    <div>\n      <div style={{ width: '95%' }}>\n        <span style={{ float: 'left' }}>\n          <input\n            value={globalFilter || ''}\n            onChange={(e) => {\n              setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n            }}\n            placeholder={`Click to search results!`}\n            style={{\n              width: '100%',\n              border: '0',\n              height: '21px',\n            }}\n          />\n        </span>\n        <span\n          style={{ float: 'right', height: '30px' }}\n        >{`${numDocs} item(s) found`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionTable;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { selectAmcatIndex, setAmcatIndices } from '../actions';\n\nimport {\n  Header,\n  Button,\n  Modal,\n  Form,\n  Dropdown,\n  Loader,\n  Dimmer,\n  Icon,\n} from 'semantic-ui-react';\n\n// default roles\nconst guestRoles = [\n  { key: 0, value: 'NONE', text: 'No access' },\n  { key: 10, value: 'METAREADER', text: 'Meta-reader' },\n  { key: 20, value: 'READER', text: 'Reader' },\n  { key: 30, value: 'WRITER', text: 'Writer' },\n  { key: 40, value: 'ADMIN', text: 'Admin' },\n];\n\nclass CreateAmcatIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalStatus: 'inactive',\n      newIndexName: '',\n      guestRole: 'NONE',\n      nameError: '',\n    };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      newIndexName: this.state.newIndexName.trim(),\n    });\n\n    if (\n      this.props.amcatIndices.some((o) => o.name === this.state.newIndexName)\n    ) {\n      this.setState({\n        nameError: 'This project name already exists',\n      });\n      return;\n    }\n    this.setState({\n      modalStatus: 'pending',\n    });\n    this.props.amcat\n      .createIndex(this.state.newIndexName, this.state.guestRole)\n      .then((res) => {\n        // maybe check for 201 before celebrating\n\n        if (this.props.amcat) {\n          this.props.amcat.getIndices().then((res) => {\n            this.props.selectAmcatIndex(null);\n            this.props.setAmcatIndices(res.data);\n          });\n        }\n        this.setState({\n          modalStatus: 'inactive',\n        });\n      })\n      .catch((e) => {\n        console.log(e.message);\n        console.log(e);\n        this.setState({\n          modalStatus: 'error',\n        });\n      });\n  };\n\n  validateName(name) {\n    if (name.match(/[ \"*|<>/?,A-Z]/)) {\n      const invalid = name.match(/[ \"*|<>/?]/gi);\n      let uniqueInvalid = [...new Set(invalid)].map((c) =>\n        c === ' ' ? 'space' : c\n      );\n      if (name.match(/[A-Z]/)) uniqueInvalid.push('UPPERCASE');\n      this.setState({\n        nameError: `Illegal symbols: ${uniqueInvalid.join(' ')}`,\n      });\n    } else {\n      this.setState({\n        nameError: null,\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.amcatIndices) return null;\n\n    return (\n      <Modal\n        as={Form}\n        trigger={\n          <Button primary>\n            <Icon name=\"plus\" />\n            Create New Project\n          </Button>\n        }\n        onSubmit={(e) => this.onSubmit(e)}\n        open={this.state.modalStatus !== 'inactive'}\n        onClose={() =>\n          this.setState({\n            modalStatus: 'inactive',\n          })\n        }\n        onOpen={() => {\n          this.setState({\n            newIndexName: '',\n            guestRoles: 'NONE',\n            modalStatus: 'awaiting input',\n          });\n        }}\n        size=\"tiny\"\n      >\n        <Header icon=\"pencil\" content=\"Create New Project\" as=\"h2\" />\n        <Modal.Content>\n          <Form.Group>\n            <Form.Input\n              width={12}\n              label=\"Name\"\n              required\n              type=\"text\"\n              error={this.state.nameError ? this.state.nameError : null}\n              value={this.state.newIndexName}\n              onChange={(e, d) => {\n                this.validateName(d.value);\n                this.setState({\n                  newIndexName: d.value,\n                  modalStatus: 'awaiting input',\n                });\n              }}\n              placeholder=\"Enter name\"\n            />\n            <div>\n              <b>Guest role</b>\n              <br />\n              <Form.Input\n                width={4}\n                label=\"Name\"\n                as={Dropdown}\n                selection\n                value={this.state.guestRole}\n                onChange={(e, d) => {\n                  this.setState({\n                    guestRole: d.value,\n                  });\n                }}\n                options={guestRoles}\n              />\n            </div>\n          </Form.Group>\n        </Modal.Content>\n        <Modal.Actions>\n          {this.state.modalStatus === 'error' ? (\n            <div>\n              Could not create index for a reason not yet covered in the error\n              handling...\n            </div>\n          ) : null}\n          {this.state.modalStatus === 'pending' ? (\n            <Dimmer active inverted>\n              <Loader content=\"Creating Project\" />\n            </Dimmer>\n          ) : (\n            <Button type=\"submit\" color=\"green\" icon=\"save\" content=\"Create\" />\n          )}\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n    amcatIndices: state.amcatIndices,\n  };\n};\n\nexport default connect(mapStateToProps, { selectAmcatIndex, setAmcatIndices })(\n  CreateAmcatIndex\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Container, Dropdown } from 'semantic-ui-react';\nimport { selectAmcatIndex, setAmcatIndices } from '../actions';\n\nimport SelectionTable from './SelectionTable';\nimport CreateAmcatIndex from './CreateAmcatIndex';\n\nconst tableColumns = [\n  {\n    Header: 'Project',\n    accessor: 'name',\n    headerClass: 'thirteen wide',\n  },\n  {\n    Header: 'Role',\n    accessor: 'role',\n    headerClass: 'five wide',\n  },\n];\n\nclass AmcatIndexSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.type = this.props.type ? this.props.type : 'table';\n    this.state = {\n      selectedAmcatIndex: this.props.amcatIndex,\n    };\n  }\n\n  componentDidMount() {\n    this.props.amcat.getIndices().then((res) => {\n      this.props.setAmcatIndices(res.data);\n    });\n  }\n\n  renderTable() {\n    return (\n      <Container>\n        <Button.Group widths=\"2\">\n          <CreateAmcatIndex />\n        </Button.Group>\n        <SelectionTable\n          columns={tableColumns}\n          data={this.props.amcatIndices ? this.props.amcatIndices : []}\n          selectedRow={this.state.selectedAmcatIndex}\n          setSelectedRow={(index) => this.props.selectAmcatIndex(index)}\n          defaultSize={10}\n          downloadArticleSet={false}\n        />\n      </Container>\n    );\n  }\n\n  renderDropDownItems = (indices) => {\n    return indices.map((index) => {\n      return { key: index.name, text: index.name, value: index.name };\n    });\n  };\n\n  onDropdownSelect = (value) => {\n    if (value && this.props.amcatIndices !== null) {\n      const i = this.props.amcatIndices.findIndex((row) => row.name === value);\n\n      this.props.selectAmcatIndex({\n        ...this.props.amcatIndices[i],\n        ROW_ID: i.toString(),\n      });\n    } else this.props.selectAmcatIndex(null);\n  };\n\n  renderDropDown() {\n    return (\n      <React.Fragment>\n        <div className=\"ui content\" style={{ marginTop: '5px' }}>\n          <h4 style={{ marginBottom: '10px' }}>\n            {this.props.amcatIndex ? 'Current Project: ' : 'Select Project'}\n          </h4>\n        </div>\n        <Dropdown\n          search\n          fluid\n          button\n          floating\n          options={this.renderDropDownItems(this.props.amcatIndices)}\n          value={this.props.amcatIndex ? this.props.amcatIndex.name : null}\n          onChange={(e, d) => this.onDropdownSelect(d.value)}\n        />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    switch (this.type) {\n      case 'table':\n        return this.renderTable();\n      case 'dropdown':\n        return this.renderDropDown();\n      default:\n        return null;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n    amcatIndex: state.amcatIndex,\n    amcatIndices: state.amcatIndices,\n  };\n};\n\nexport default connect(mapStateToProps, { selectAmcatIndex, setAmcatIndices })(\n  AmcatIndexSelector\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Container, Header, Table } from 'semantic-ui-react';\n\nclass PreviewTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.n = 10;\n  }\n\n  createHeader = (data) => {\n    return data[0].data.map((colname) => {\n      return (\n        <Table.HeaderCell>\n          <span title={colname}>{colname}</span>\n        </Table.HeaderCell>\n      );\n    });\n  };\n\n  createRows = (data, n) => {\n    const previewdata = data.slice(0, n + 1);\n    return previewdata.slice(1).map((row) => {\n      return <Table.Row>{this.createRowCells(row.data)}</Table.Row>;\n    });\n  };\n\n  createRowCells = (row) => {\n    return row.map((cell) => {\n      return (\n        <Table.Cell>\n          <span title={cell}>{cell}</span>\n        </Table.Cell>\n      );\n    });\n  };\n\n  render() {\n    if (this.props.data.length <= 1) return null;\n    return (\n      <Container style={{ marginTop: '2em' }}>\n        <Table fixed singleLine basic=\"very\">\n          <Table.Header>\n            <Table.Row>{this.createHeader(this.props.data)}</Table.Row>\n          </Table.Header>\n          <Table.Body>{this.createRows(this.props.data, this.n)}</Table.Body>\n        </Table>\n        {this.props.data.length > this.n ? (\n          <Header align=\"center\">\n            {this.props.data.length - 1 - this.n} more rows\n          </Header>\n        ) : null}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { data: state.uploadDocuments };\n};\n\nexport default connect(mapStateToProps, {})(PreviewTable);\n","import React, { useEffect, useState } from 'react';\nimport { Select, Form, Button, Icon } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\n\nconst SubmitForm = ({ data, amcatIndex, fileRef }) => {\n  const amcat = useSelector((state) => state.amcat);\n  const [options, setOptions] = useState([]);\n  const [dateField, setDateField] = useState(null);\n  const [titleField, setTitleField] = useState(null);\n  const [textField, setTextField] = useState(null);\n  const [annotationsField, setAnnotationsField] = useState(null);\n\n  useEffect(() => {\n    if (data.length <= 1) {\n      setDateField(null);\n      setTitleField(null);\n      setTextField(null);\n      setAnnotationsField(null);\n      setOptions([]);\n      return;\n    }\n\n    setOptions(\n      data[0].data.map((colname) => {\n        return { key: colname, value: colname, text: colname };\n      })\n    );\n    setDateField(data[0].data.includes('date') ? 'date' : null);\n    setTitleField(data[0].data.includes('title') ? 'title' : null);\n    setTextField(data[0].data.includes('text') ? 'text' : null);\n    setAnnotationsField(\n      data[0].data.includes('annotations') ? 'annotations' : null\n    );\n  }, [data]);\n\n  const csvToJson = (data, titleField, textField, annotationsField) => {\n    const keys = data[0].data;\n    return data.slice(1).map((row) => {\n      const datarow = row.data.reduce(\n        (obj, value, i) => {\n          let key = keys[i];\n          if (key === dateField) {\n            obj['date'] = value;\n          } else if (key === titleField) {\n            obj['title'] = value;\n          } else if (key === textField) {\n            obj['text'] = value;\n          } else if (key === annotationsField) {\n            obj['annotations'] = value;\n          } else {\n            obj['meta'][key] = value;\n          }\n          return obj;\n        },\n        { meta: {}, annotations: '' }\n      );\n      datarow.meta = JSON.stringify(datarow.meta, null, 2);\n      return datarow;\n    });\n  };\n\n  const uploadData = async () => {\n    try {\n      const preparedData = csvToJson(\n        data,\n        titleField,\n        textField,\n        annotationsField\n      );\n      await amcat.createDocuments(amcatIndex.name, preparedData);\n      fileRef.current.removeFile();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  if (data.length <= 1) return null;\n\n  return (\n    <>\n      <Form>\n        <Form.Group>\n          <Form.Field\n            control={Select}\n            placeholder=\"title column\"\n            options={options}\n            value={titleField}\n            onChange={(e, d) => setTitleField(d.value)}\n          />\n          <Form.Field\n            control={Select}\n            placeholder=\"text column\"\n            options={options}\n            value={textField}\n            onChange={(e, d) => setTextField(d.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Field\n            control={Select}\n            clearable\n            placeholder=\"annotations (optional)\"\n            options={options}\n            value={annotationsField}\n            onChange={(e, d) => setAnnotationsField(d.value)}\n          />\n          <Form.Field\n            control={Button}\n            fluid\n            onClick={uploadData}\n            disabled={!titleField || !textField}\n          >\n            <Icon name=\"upload\" />\n            Upload\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </>\n  );\n};\n\nexport default SubmitForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CSVReader } from 'react-papaparse';\nimport { uploadDocuments } from '../actions';\nimport PreviewTable from './PreviewTable';\nimport SubmitForm from './submitForm';\n\nimport { Grid } from 'semantic-ui-react';\n\nclass UploadDocuments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileRef = React.createRef();\n  }\n\n  render() {\n    if (!this.props.amcatIndex) return null;\n    return (\n      <Grid stackable style={{ marginTop: '4.3em' }}>\n        <Grid.Row>\n          <Grid.Column floated=\"right\" width={4}>\n            {' '}\n            <CSVReader\n              ref={this.fileRef}\n              onFileLoad={(data) => this.props.uploadDocuments(data)}\n              addRemoveButton\n              onRemoveFile={() => this.props.uploadDocuments([])}\n            >\n              <span>Click to upload</span>\n            </CSVReader>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={10}>\n            <SubmitForm\n              data={this.props.newDocuments}\n              amcatIndex={this.props.amcatIndex}\n              fileRef={this.fileRef}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <PreviewTable data={this.props.newDocuments} />\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcatIndex: state.amcatIndex,\n    newDocuments: state.uploadDocuments,\n  };\n};\n\nexport default connect(mapStateToProps, { uploadDocuments })(UploadDocuments);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport history from '../history';\n\nimport CreateDocument from './CreateDocument';\nimport AmcatIndexDetails from './AmcatIndexDetails';\nimport DeleteAmcatIndex from './DeleteAmcatIndex';\nimport AmcatIndexSelector from './AmcatIndexSelector';\nimport UploadDocuments from './UploadDocuments';\n\nimport { Grid, Menu, Segment, Button } from 'semantic-ui-react';\n\nclass Indices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 'Project Details',\n    };\n  }\n\n  renderSwitch(activeItem) {\n    switch (activeItem) {\n      case 'Project Details':\n        return <AmcatIndexDetails />;\n      case 'Upload Documents':\n        return <UploadDocuments />;\n      case 'Create New Document':\n        return <CreateDocument />;\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    return (\n      <Grid stackable style={{ marginTop: '3em' }}>\n        <Grid.Column floated=\"left\" width={5}>\n          <AmcatIndexSelector type=\"table\" />\n        </Grid.Column>\n        <Grid.Column width={11}>\n          <Button.Group widths=\"2\">\n            <Button\n              primary\n              disabled={!this.props.amcatIndex}\n              onClick={(e, d) => history.push('/query')}\n            >\n              Query Documents\n            </Button>\n          </Button.Group>\n\n          <Button.Group className=\"red\" widths=\"2\" style={{ marginTop: '5px' }}>\n            <DeleteAmcatIndex amcatIndex={this.props.amcatIndex} />\n          </Button.Group>\n          <Segment style={{ border: 0 }}>\n            <Menu pointing secondary>\n              <Menu.Item\n                name=\"Project Details\"\n                active={this.state.activeItem === 'details'}\n                onClick={(e, d) =>\n                  this.setState({\n                    activeItem: d.name,\n                  })\n                }\n              />\n              <Menu.Item\n                name=\"Upload Documents\"\n                active={this.state.activeItem === 'upload'}\n                onClick={(e, d) =>\n                  this.setState({\n                    activeItem: d.name,\n                  })\n                }\n              />\n              <Menu.Item\n                name=\"Create New Document\"\n                active={this.state.activeItem === 'create'}\n                onClick={(e, d) =>\n                  this.setState({\n                    activeItem: d.name,\n                  })\n                }\n              />\n            </Menu>\n            {this.renderSwitch(this.state.activeItem)}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcatIndex: state.amcatIndex,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Indices);\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport Plotly from 'plotly.js';\n\nimport createPlotlyComponent from 'react-plotly.js/factory';\nconst PlotlyComponent = createPlotlyComponent(Plotly);\n\nconst Plot = () => {\n  const [dates, setDates] = useState(null);\n  const [docsOverTime, setDocsOverTime] = useState([]);\n\n  const documents = useSelector((state) => state.documents);\n\n  const unpack = (rows, key) => {\n    return rows.map(function (row) {\n      return row[key];\n    });\n  };\n\n  useEffect(() => {\n    if (documents) {\n      setDates(unpack(documents, 'date'));\n      setDocsOverTime(() => {\n        const dates = unpack(documents, 'date');\n        const docsOverTime = [];\n\n        dates.map((date) => {\n          docsOverTime.push(_.filter(documents, { date: date }).length);\n          return docsOverTime;\n        });\n        return docsOverTime;\n      });\n    }\n  }, [documents]);\n\n  return (\n    <PlotlyComponent\n      data={[\n        {\n          x: dates,\n          y: docsOverTime,\n\n          type: 'scatter',\n          mode: 'lines+markers',\n          line: { color: '#0E6EB8' },\n        },\n        {},\n      ]}\n      layout={{\n        width: '95%',\n        height: 500,\n        //   title: 'Documents over time',\n        font: {\n          family: 'Lato',\n          size: 12,\n        },\n        xaxis: {\n          title: {\n            text: 'Time (Date)',\n          },\n        },\n        yaxis: {\n          title: {\n            text: 'Number of Documents',\n          },\n        },\n      }}\n      config={{ displaylogo: false }}\n    />\n  );\n};\n\nexport default Plot;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport SelectionTable from './SelectionTable';\nimport { selectDocument } from '../actions';\n\nconst documentTableColumns = [\n  { Header: 'ID', accessor: 'id', headerClass: 'two wide' },\n  { Header: 'Date', accessor: 'date', headerClass: 'six wide' },\n  { Header: 'Title', accessor: 'title', headerClass: 'eight wide' },\n];\n\nclass DocumentTable extends React.Component {\n  render() {\n    if (!this.props.amcatIndex) return null;\n\n    return (\n      <SelectionTable\n        columns={documentTableColumns}\n        data={this.props.documents}\n        selectedRow={this.props.document}\n        setSelectedRow={(row) => {\n          this.props.selectDocument(row);\n        }}\n        defaultSize={15}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcatIndex: state.amcatIndex,\n    documents: state.documents,\n    document: state.document,\n  };\n};\n\nexport default connect(mapStateToProps, { selectDocument })(DocumentTable);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport { setIndexFields, setFieldValues } from '../actions';\n\nimport { Button, Form, Container } from 'semantic-ui-react';\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\n\nconst FilterForms = function () {\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n  const fields = useSelector((state) => state.indexFields);\n  const fieldValues = useSelector((state) => state.fieldValues);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (amcatIndex && amcat) {\n      amcat.getFields(amcatIndex.name).then((res) => {\n        dispatch(setIndexFields(res.data));\n      });\n    } else {\n      setIndexFields(null);\n    }\n  }, [amcat, amcatIndex, dispatch]);\n\n  const onSubmit = (key, value) => {\n    let newFieldValues = { ...fieldValues };\n    newFieldValues[key] = value;\n    if (value === '') {\n      newFieldValues = _.omit(newFieldValues, key);\n    }\n\n    dispatch(setFieldValues(newFieldValues));\n  };\n\n  const dateFilter = (key, value) => {\n    let newFieldValues = { ...fieldValues };\n\n    // this is for the POST method\n    if (!newFieldValues.date) {\n      newFieldValues['date'] = {};\n      newFieldValues.date[key] = extractDateFormat(value);\n    } else if (value === null) {\n      newFieldValues.date = _.omit(newFieldValues.date, key);\n      if (_.isEmpty(newFieldValues.date)) {\n        newFieldValues = _.omit(newFieldValues, 'date');\n      }\n    } else {\n      newFieldValues.date[key] = extractDateFormat(value);\n    }\n    dispatch(setFieldValues(newFieldValues));\n  };\n\n  const extractDateFormat = (date) => {\n    if (!date) return '';\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const year = date.getUTCFullYear();\n    return year + '-' + month + '-' + day;\n  };\n\n  const renderFields = () => {\n    return Object.keys(fields).map((key) => {\n      if (fields[key] === 'text') {\n        return (\n          <Form.TextArea\n            key={key}\n            value={fieldValues[key] ? fieldValues[key] : ''}\n            onChange={(e, d) => {\n              e.stopPropagation();\n              onSubmit(key, d.value);\n            }}\n            label={key.charAt(0).toUpperCase() + key.slice(1)}\n          />\n        );\n      }\n      if (fields[key] === 'date') {\n        return (\n          <Container key=\"date_filter\">\n            <Form.Field key={key + '_gte'}>\n              <SemanticDatepicker\n                key=\"gte\"\n                type=\"basic\"\n                label=\"Start Date\"\n                locale={navigator.locale}\n                format=\"YYYY-MM-DD\"\n                onChange={(e, d) => {\n                  e && e.stopPropagation();\n                  dateFilter('gte', d.value);\n                }}\n              />\n            </Form.Field>\n            <Form.Field key={key + '_lte'}>\n              <SemanticDatepicker\n                key=\"lte\"\n                type=\"basic\"\n                label=\"End Date\"\n                locale={navigator.locale}\n                format=\"YYYY-MM-DD\"\n                onChange={(e, d) => {\n                  e && e.stopPropagation();\n                  dateFilter('lte', d.value);\n                }}\n              />\n            </Form.Field>\n          </Container>\n        );\n      }\n      if (fields[key] === 'keyword') {\n        return (\n          <Form.Field key={key}>\n            <label>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\n            <input\n              value={fieldValues[key] ? fieldValues[key] : ''}\n              onChange={(e) => {\n                e.stopPropagation();\n                onSubmit(key, e.target.value);\n              }}\n            />\n          </Form.Field>\n        );\n      }\n      return null;\n    });\n  };\n\n  if (!fields) return null;\n  else\n    return (\n      <React.Fragment>\n        {renderFields()}\n        <br />\n        <Button.Group widths={2}>\n          <Button\n            className=\"ui red button\"\n            onSubmit={(e, d) => {\n              dispatch(setFieldValues(null));\n            }}\n          >\n            Reset Filters\n          </Button>\n        </Button.Group>\n      </React.Fragment>\n    );\n};\n\nexport default FilterForms;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport { setFieldValues } from '../actions';\n\nimport { Button, Dropdown, Grid } from 'semantic-ui-react';\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\n\nconst QuickFilters = ({ runQuery }) => {\n  const documents = useSelector((state) => state.documents);\n  const fieldValues = useSelector((state) => state.fieldValues);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (key, value) => {\n    let newFieldValues = { ...fieldValues };\n    newFieldValues[key] = value;\n    if (value === '') {\n      newFieldValues = _.omit(newFieldValues, key);\n    }\n    dispatch(setFieldValues(newFieldValues));\n  };\n\n  const dateFilter = (key, value) => {\n    let newFieldValues = { ...fieldValues };\n\n    // this is for the POST method\n    if (!newFieldValues.date) {\n      newFieldValues['date'] = {};\n      newFieldValues.date[key] = extractDateFormat(value);\n    } else if (value === null) {\n      newFieldValues.date = _.omit(newFieldValues.date, key);\n      if (_.isEmpty(newFieldValues.date)) {\n        newFieldValues = _.omit(newFieldValues, 'date');\n      }\n    } else {\n      newFieldValues.date[key] = extractDateFormat(value);\n    }\n    dispatch(setFieldValues(newFieldValues));\n  };\n\n  const renderDatePicker = (option) => {\n    return (\n      <Dropdown.Menu>\n        <SemanticDatepicker\n          type=\"basic\"\n          locale={navigator.locale}\n          format=\"YYYY-MM-DD\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          onChange={(e, d) => {\n            dateFilter(option, d.value);\n          }}\n        />\n      </Dropdown.Menu>\n    );\n  };\n\n  const renderStartDateFilter = () => {\n    return (\n      <Dropdown\n        key=\"gte\"\n        text=\"Start\"\n        icon=\"filter\"\n        floating\n        labeled\n        button\n        className=\"icon\"\n      >\n        {renderDatePicker('gte')}\n      </Dropdown>\n    );\n  };\n\n  const renderEndDateFilter = () => {\n    return (\n      <Dropdown\n        key=\"lte\"\n        text=\"End\"\n        icon=\"filter\"\n        floating\n        labeled\n        button\n        className=\"icon\"\n      >\n        {renderDatePicker('lte')}\n      </Dropdown>\n    );\n  };\n\n  const getTitleOptions = (number) => {\n    const titles = [];\n    documents.forEach((document) => {\n      titles.push(document.title);\n    });\n    return _.times(number, (index) => ({\n      key: index,\n      text: titles[index],\n      value: index,\n    }));\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={2}>{renderStartDateFilter()}</Grid.Column>\n      <Grid.Column width={2}>{renderEndDateFilter()}</Grid.Column>\n      <Grid.Column width={3}>\n        <Dropdown\n          text=\"Filter by Title\"\n          icon=\"filter\"\n          floating\n          labeled\n          button\n          fluid\n          className=\"icon\"\n          scrolling\n          options={getTitleOptions(documents.length)}\n          onChange={(e) => onSubmit('title', e.target.textContent)}\n        />\n      </Grid.Column>\n      <Grid.Column width={9}>\n        <Button.Group widths={2}>\n          <Button\n            float=\"right\"\n            primary\n            onClick={() => {\n              runQuery('POST');\n            }}\n          >\n            Apply Filters\n          </Button>\n          <Button\n            float=\"right\"\n            color=\"red\"\n            onClick={() => {\n              dispatch(setFieldValues(null));\n            }}\n          >\n            Reset Filters\n          </Button>\n        </Button.Group>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst extractDateFormat = (date) => {\n  if (!date) return '';\n  const month = ('0' + (date.getMonth() + 1)).slice(-2);\n  const day = ('0' + date.getDate()).slice(-2);\n  const year = date.getUTCFullYear();\n  return year + '-' + month + '-' + day;\n};\n\nexport default QuickFilters;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport _ from 'lodash';\n\nimport TimeSeriesPlot from './TimeSeriesPlot';\nimport {\n  setDocuments,\n  setQueryString,\n  setLatestQueries,\n  setFieldValues,\n} from '../actions';\n\nimport AmcatIndexSelector from './AmcatIndexSelector';\nimport DocumentTable from './DocumentTable';\nimport QueryHelp from './QueryHelp';\nimport FilterForms from './FilterForms';\nimport QuickFilters from './QuickFilters';\n\nimport { Segment, Form, Grid, Button, Icon } from 'semantic-ui-react';\n\nclass QueryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryMethod: 'POST',\n      accordionActive: false,\n    };\n  }\n\n  prepareFilters() {\n    this.setState({\n      queryMethod: 'POST',\n    });\n    const obj = {};\n    const dateFilter = {\n      range: {},\n    };\n    Object.entries(this.props.filters).map((filter) => {\n      if (filter[0] === 'date') {\n        for (const [rangeIndicator, value] of Object.entries(filter[1])) {\n          if (value === null || value === '') {\n            console.log('here');\n            dateFilter.range = _.omit(dateFilter.range, rangeIndicator);\n          } else dateFilter.range[rangeIndicator] = value;\n        }\n        obj['date'] = dateFilter;\n      } else {\n        obj[filter[0]] = { value: filter[1] };\n      }\n      return obj;\n    });\n    return obj;\n  }\n\n  runQuery = (method = 'GET') => {\n    if (!this.props.amcatIndex) return;\n    switch (method) {\n      case 'POST': {\n        this.props.amcat\n          .postQuery(\n            this.props.amcatIndex.name,\n            this.props.queryString,\n            Object.keys(this.props.fields),\n            '2m',\n            100,\n            {},\n            { ...this.prepareFilters() }\n          )\n          .then((res) => {\n            this.props.setDocuments(res.data.results);\n            this.addToQueryStrings(this.props.queryString);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n        return null;\n      }\n      default: {\n        this.props.amcat\n          .getQuery(\n            this.props.amcatIndex.name,\n            this.props.queryString,\n            Object.keys(this.props.fields),\n            '2m',\n            100,\n            {},\n            {\n              ...this.props.filters,\n            }\n          )\n          .then((res) => {\n            this.props.setDocuments(res.data.results);\n            this.addToQueryStrings(this.props.queryString);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      }\n    }\n  };\n\n  addToQueryStrings(query) {\n    let testQuery = {\n      queryString: query,\n      filters: this.props.filters,\n      key: this.props.filters\n        ? this.props.filters.date\n          ? query +\n            '-' +\n            Object.values(this.props.filters.date).join('-') +\n            '-' +\n            Object.values(this.props.filters).join('-')\n          : query + '-' + Object.values(this.props.filters).join('-')\n        : query + '-' + Object.values(this.props.filters).join('-'),\n    };\n    let latestQueries = [...this.props.latestQueries];\n    if (_.some(latestQueries, ['key', testQuery.key])) {\n      _.remove(latestQueries, testQuery);\n      latestQueries.unshift(testQuery);\n    } else {\n      latestQueries = [testQuery, ...latestQueries];\n    }\n    this.props.setLatestQueries(latestQueries);\n  }\n\n  renderIndexSelector() {\n    return (\n      <React.Fragment>\n        <AmcatIndexSelector type=\"dropdown\" />\n      </React.Fragment>\n    );\n  }\n\n  renderQueryWindow() {\n    return (\n      <Segment style={{ border: '0' }}>\n        <Grid columns={2}>\n          <Grid.Column width={12}>\n            <Form style={{ marginBottom: '2em' }}>\n              <TextareaAutosize\n                value={this.props.queryString ? this.props.queryString : ''}\n                style={{ height: 20 }}\n                placeholder=\"Query...\"\n                onChange={(e) => this.props.setQueryString(e.target.value)}\n              />\n            </Form>\n\n            <Form style={{ marginBottom: '2em' }}>{this.renderFilters()}</Form>\n            <Form>\n              <Button.Group widths=\"2\">\n                <Button\n                  primary\n                  type=\"submit\"\n                  onClick={() => this.runQuery(this.state.queryMethod)}\n                >\n                  <Icon name=\"search\" />\n                  Execute Query\n                </Button>\n              </Button.Group>\n            </Form>\n            <QueryHelp />\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <Grid.Row>{this.renderLatestQueriesList()}</Grid.Row>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    );\n  }\n\n  renderFilters() {\n    const active = this.state.accordionActive ? 'active' : '';\n\n    return (\n      <div className=\"ui styled fluid accordion\">\n        <div\n          className={`title ${active}`}\n          onClick={(e) => {\n            e.stopPropagation();\n            this.setState({\n              accordionActive: !this.state.accordionActive,\n            });\n          }}\n        >\n          <i className=\" dropdown icon\"></i>\n          Show All Filters\n        </div>\n        <div className={`content ${active}`}>\n          <FilterForms />\n        </div>\n      </div>\n    );\n  }\n\n  renderLatestQueriesList() {\n    return (\n      <React.Fragment>\n        <h4>Latest Queries:</h4>\n        <Button.Group vertical widths={2}>\n          {this.props.latestQueries.map((query, idx) => {\n            if (query.queryString.length < 2 || idx > 4) return null;\n            return (\n              <Button\n                key={query.queryString + Object.values(query.filters).join(',')}\n                fluid\n                style={{ marginBottom: '0.5em' }}\n                onClick={async () => {\n                  await this.props.setQueryString(query.queryString);\n                  await this.props.setFieldValues(query.filters);\n                  this.runQuery();\n                }}\n              >\n                {Object.keys(query.filters).length > 0 && (\n                  <Icon name=\"filter\" />\n                )}\n                {query.key.length > 20\n                  ? query.key.slice(0, 17) + '...'\n                  : query.key}\n              </Button>\n            );\n          })}\n        </Button.Group>\n      </React.Fragment>\n    );\n  }\n\n  renderDocumentTable() {\n    return <DocumentTable />;\n  }\n\n  renderTimeSeriesPlot() {\n    return <TimeSeriesPlot />;\n  }\n\n  render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <Grid.Row>{this.renderIndexSelector()}</Grid.Row>\n            <Grid.Row>{this.renderQueryWindow()}</Grid.Row>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <Grid.Row>\n              <div>\n                <h4>Quick Filters:</h4>\n                <QuickFilters runQuery={this.runQuery} />\n              </div>\n            </Grid.Row>\n            <Grid.Row>{this.renderDocumentTable()}</Grid.Row>\n            <Grid.Row>\n              {this.props.documents.length > 1 && this.renderTimeSeriesPlot()}\n            </Grid.Row>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n    amcatIndex: state.amcatIndex,\n    fields: state.indexFields,\n    filters: state.fieldValues,\n    queryString: state.queryString,\n    latestQueries: state.latestQueries,\n    documents: state.documents,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDocuments,\n  setQueryString,\n  setLatestQueries,\n  setFieldValues,\n})(QueryForm);\n","import React from 'react';\nimport QueryForm from './QueryForm';\nimport { connect } from 'react-redux';\n\nclass Query extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amcatIndexFields: null,\n      fieldValues: {},\n    };\n  }\n\n  render() {\n    return <QueryForm />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    amcat: state.amcat,\n    amcatIndex: state.amcatIndex,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Query);\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport HeaderMenu from './components/HeaderMenu';\nimport { Divider, Container } from 'semantic-ui-react';\nimport history from './history';\n\n// login and authenticated route\nimport AmcatLogin from './components/AmcatLogin';\nimport AuthRoute from './components/AuthRoute';\n\n// Main pages. Use below in items to include in header menu\nimport Home from './components/Home';\n\nimport Admin from './components/Admin';\nimport Indices from './components/Indices';\nimport Query from './components/Query';\nimport DocumentDetail from './components/DocumentDetail';\n\n// Change to add new components to the header\n// The first item will be the opening page after login\nconst items = [\n  { label: 'Home', path: '/home', Component: Home },\n  {\n    label: 'Manage Projects',\n    path: '/indices',\n    position: 'left',\n    Component: Indices,\n  },\n  { label: 'Run Queries', path: '/query', Component: Query },\n  // { label: 'Browse Index', path: '/indexDetail', Component: IndexDetail },\n  {\n    label: 'Browse Document',\n    path: '/browseDocument',\n    Component: DocumentDetail,\n  },\n  {\n    label: 'Manage Users and Access',\n    path: '/userManagement',\n    position: 'right',\n    Component: Admin,\n  },\n];\n\nconst App = () => {\n  const createNavigation = (items) => {\n    return items.map((item) => {\n      return (\n        <AuthRoute\n          key={item.path}\n          path={item.path}\n          Component={item.Component}\n        />\n      );\n    });\n  };\n\n  return (\n    <Router history={history}>\n      <HeaderMenu items={items} />\n      <Divider />\n      <Container style={{ marginTop: '4em' }}>\n        <Switch>\n          <Route exact path=\"/\" render={() => <AmcatLogin items={items} />} />\n          {createNavigation(items)}\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport history from '../history';\n\nimport { selectDocument } from '../actions';\n\nimport {\n  Container,\n  Header,\n  Label,\n  Grid,\n  Message,\n  Icon,\n  Button,\n} from 'semantic-ui-react';\n\nconst DocumentDetail = () => {\n  const amcat = useSelector((state) => state.amcat);\n  const amcatIndex = useSelector((state) => state.amcatIndex);\n  const document = useSelector((state) => state.document);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (amcat && amcatIndex && document.ORG_ID) {\n      amcat.getDocument(amcatIndex.name, document.ORG_ID).then((res) => {\n        dispatch(selectDocument(res.data));\n      });\n    }\n  }, [amcat, amcatIndex, dispatch, document.ORG_ID]);\n\n  if (Object.keys(document).length === 0) {\n    return (\n      <Container>\n        <>\n          <Header textAlign=\"center\">No Documents Selected!</Header>\n          <Message icon>\n            <Icon name=\"circle notched\" loading />\n            <Message.Content>\n              <Message.Header>Waiting for document</Message.Header>\n              <Button onClick={() => history.push('/query')}>\n                Select a document\n              </Button>\n            </Message.Content>\n          </Message>\n        </>\n      </Container>\n    );\n  } else {\n    return (\n      <Grid divided>\n        <Grid.Row columns={2}>\n          <Grid.Column floated=\"right\" width={7}>\n            <Header as=\"h1\">\n              <Label as=\"a\" color=\"blue\" ribbon>\n                Document Title\n              </Label>\n              {document.title}\n            </Header>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={7}>\n            <Header as=\"h2\">\n              <Label as=\"a\" color=\"blue\" ribbon>\n                Document Date\n              </Label>\n              {document.date}\n            </Header>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns={1}>\n          <Grid.Column floated=\"left\" width={16}>\n            <Container textAlign=\"justified\">\n              <div className=\"ui segment\">\n                <p>{document.text}</p>\n              </div>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n};\n\nexport default DocumentDetail;\n","import { combineReducers } from 'redux';\n\nconst amcat = (state = null, action) => {\n  switch (action.type) {\n    case 'CREATE_AMCAT_SESSION':\n      return action.payload;\n    case 'DELETE_AMCAT_SESSION':\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst amcatIndex = (state = null, action) => {\n  switch (action.type) {\n    case 'SELECT_AMCAT_INDEX':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst amcatIndices = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_AMCAT_INDICES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst documents = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_DOCUMENTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst document = (state = {}, action) => {\n  switch (action.type) {\n    case 'SELECT_ROW':\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nconst uploadDocuments = (state = [], action) => {\n  switch (action.type) {\n    case 'UPLOAD_DOCUMENTS':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nconst indexFields = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_INDEX_FIELDS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst fieldValues = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_FIELD_VALUES':\n      return { ...action.payload };\n    default:\n      return state;\n  }\n};\n\nconst queryString = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_QUERY_STRING':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst latestQueries = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_LATEST_QUERIES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst allUsers = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ALL_USERS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  amcat,\n  amcatIndex,\n  amcatIndices,\n  document,\n  documents,\n  uploadDocuments,\n  indexFields,\n  fieldValues,\n  queryString,\n  latestQueries,\n  allUsers,\n});\n\nexport default rootReducer;\n","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n","var map = {\n\t\"./bg-BG.json\": 853,\n\t\"./ca-ES.json\": 854,\n\t\"./cs-CZ.json\": 855,\n\t\"./de-DE.json\": 856,\n\t\"./en-US.json\": 501,\n\t\"./es-ES.json\": 857,\n\t\"./et-EE.json\": 858,\n\t\"./fi-FI.json\": 859,\n\t\"./fr-FR.json\": 860,\n\t\"./he-IL.json\": 861,\n\t\"./it-IT.json\": 862,\n\t\"./ja-JP.json\": 863,\n\t\"./ko-KR.json\": 864,\n\t\"./nb-NO.json\": 865,\n\t\"./nn-NO.json\": 866,\n\t\"./pl-PL.json\": 867,\n\t\"./pt-BR.json\": 868,\n\t\"./ru-RU.json\": 869,\n\t\"./sv-SE.json\": 870,\n\t\"./tr-TR.json\": 871,\n\t\"./zh-CN.json\": 872\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 852;"],"sourceRoot":""}